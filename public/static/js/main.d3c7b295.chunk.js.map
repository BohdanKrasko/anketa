{"version":3,"sources":["img/logo.png","pages/Start/Start.js","api/client.js","pages/SingIn/SignIn.js","pages/SingUp/SignUp.js","Components/table/Table.js","Components/table/SwipedTable.js","Components/menu/RightMenuStats.js","img/anketa.png","Components/anketa/AnketaCard.js","img/plus.png","Components/anketa/AddAnketa.js","pages/Anketa/Ankety.js","Components/anketa/Form.js","pages/Anketa/Anketa.js","Components/anketa/Tree.js","pages/Anketa/AddAnketa.js","pages/Anketa/EditAnketa.js","pages/Statistics/Statistics.js","Components/table/Children.js","pages/Children/Children.js","pages/Profile/Profile.js","Components/table/Admin.js","pages/Admin/Admin.js","routes/App.js","reportWebVitals.js","index.js"],"names":["App","props","history","useHistory","useStyles","makeStyles","root","transition","cardHovered","transform","data","location","state","classes","useState","raised","shadow","setState","Grid","container","justifyContent","alignItems","direction","style","minHeight","Card","sx","maxWidth","margin","className","onMouseOver","onMouseOut","zdepth","Button","onClick","event","preventDefault","push","pathname","CardMedia","component","image","logo","Alert","icon","severity","textAlign","display","Typography","url","process","PORT","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getAnakety","token","fetch","headers","method","getChildren","parents_id","deleteChildren","children_id","addChildren","body","JSON","stringify","surname","name","birthday","toLocaleDateString","weight","height","editChildren","id","getAnaketa","anketa_id","deleteAnketa","getAllChildrenByAnketa","hasAnswersExist","check","addAdmin","admin","editAdmin","deleteAdmin","admin_id","Copyright","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","SignIn","username","password","onFailure","handleInputChange","value","prevState","ThemeProvider","Container","CssBaseline","Box","marginTop","flexDirection","Avatar","m","bgcolor","onSubmit","FormData","currentTarget","user","get","val","checkFields","login","catch","noValidate","mt","TextField","required","fullWidth","label","autoComplete","autoFocus","type","Collapse","in","mb","item","SignUp","isFirstName","isLastName","isUsername","isPhone","isPassword","isSuccess","isAlert","phoneComment","firstName","lastName","phone","length","substring","match","first_name","last_name","register","status_code","err","console","log","message","helperText","defaultValue","action","underline","size","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","parents","handleRowDelete","handleRowAdd","handleRowUpdate","selectedAnketa","iserror","errorMessages","map","msg","i","title","icons","options","search","pageSize","emptyRowsWhenPaging","pageSizeOptions","actionsColumnIndex","components","Row","persistEvents","onRowClick","children","child","name_of_anketa","editable","onRowUpdate","newData","oldData","a","onRowAdd","onRowDelete","localization","header","actions","emptyDataSourceMessage","editRow","deleteText","StyledBox","styled","backgroundColor","palette","mode","grey","Puller","width","borderRadius","position","top","left","SwipedTable","openChildrend","toggleDrawer","SwipeableDrawer","anchor","open","onClose","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","borderTopLeftRadius","borderTopRightRadius","visibility","right","p","drawerWidth","AppBar","MuiAppBar","shouldForwardProp","prop","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","Main","flexGrow","padding","spacing","DrawerHeader","mixins","toolbar","RightMenuStats","handleDrawerOpen","handleDrawerClose","isNotShowButton","useTheme","Toolbar","noWrap","IconButton","edge","Drawer","flexShrink","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","v4","role","text","index","AnketaCard","anketa","handleDelete","handleOpenChildren","confirm","useConfirm","CardHeader","res","cancellationText","confirmationText","description","DeleteOutlined","subheader","category","CardActionArea","maxHeight","anketaLogo","alt","AddAncketa","marginBottom","plus","field","hidden","format","Ankety","window","setOpen","isLoading","setLoading","useCount","setAnketa","setOpenChildrend","isAuthorized","setIsAuthorized","setChildren","setIserror","setErrorMessages","setSelectedAnketa","validate","errorList","undefined","updatedChildrend","findIndex","obj","insertId","dataToAdd","newChildren","filter","document","deleteData","delete","children_answer","list_of_answers","question","section","k_s","sections","k_q","section_id","questions","k_a","question_id","answers","answer","list_of_answers_id","newAnakety","checkData","has_answers","anketa_data","preperadData","forEach","key","parts","split","dateString","useEffect","fetchOffsetAnketa","CircularProgress","xs","md","lg","newOpen","to","Form","setValue","openNotifyS","setOpenNotifyS","handleCloseS","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","is_success","addAnswer","setTimeout","questionCount","name_of_section","InputProps","readOnly","disabled","FormControl","FormLabel","gutterBottom","marginLeft","RadioGroup","FormControlLabel","name_of_answer","control","Radio","onChange","answer_id","newValue","newArray","ans","addValue","Anketa","setError","scroll","descriptionElementRef","React","useRef","verify","paddingTop","Dialog","DialogTitle","fontWeight","DialogContent","dividers","DialogContentText","tabIndex","Tree","handleSubmit","addSection","deleteSection","addQuestion","deleteQuestion","deleteAnswer","indexSection","Tooltip","fontSize","form","target","parentid","indexQuestion","indexAnswer","AddAnketa","id_feild","setSection","setQuestion","setAnswer","dataJSON","requets","s_v","q_v","a_v","genereteJson","addAnketa","parentId","newSection","newQuestion","v","k","newAnswer","EditAnketa","deleteIteam","putValuesIntoForm","newAnketa","toString","sectionKey","sectionElement","index2","questionKey","questionElement","index3","answerKey","answerElement","addAnketaState","editAnketa","delteQuestion","Statistics","ankety","setAnkety","anketaCompare","setAnketaCompare","setChild","parent","setParent","setParents","statistic","setStatistic","renameKey","removeDuplicates","Map","values","oldKey","newKey","concatKey","fisrt","second","deleteKey","convertJson","array","child_first_name","child_last_name","parent_first_name","parent_last_name","parent_phone","element","grouped_answer_by_date","date","find","x","key_1","element_1","index_1","key_2","element_2","parent_id","index_2","section_index","diffQuestion","id1","some","diffSection","y","keyS","count","elementS","keyQ","flag","counts","stringToColor","string","hash","charCodeAt","substr","fields","getStatistic","Autocomplete","disablePortal","filterData","request","renderInput","params","Array","isArray","TreeView","disabledItemsFocusable","disableSelection","onNodeFocus","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","paddingBottom","paddingLeft","Object","keys","checked","Children","Profile","setUser","alert","setAlert","new","setPassword","handleOpenS","sevevity","isNewPass","setIsNewPass","isConfirmPass","setIsConfirmPass","getUserByUsername","checkUser","updateUser","isExistsUser","newState","exist","editUser","editPassword","AdminTable","Admin","admins","setAdmins","getAdmins","newAdmins","pass_star","updatedAdmins","exact","path","Start","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3c7b295.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5e84d7f0.png\";","import React, {useState} from 'react';\nimport logo from '../../img/logo.png';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardMedia,\n  Alert,\n  Button\n} from '@mui/material';\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst App = (props) => {\n  const history = useHistory();\n  const useStyles = makeStyles({\n    root: {\n      // maxWidth: 310,\n      transition: \"transform 0.15s ease-in-out\"\n    },\n    cardHovered: {\n      transform: \"scale3d(1.05, 1.05, 1)\"\n    }\n  });\n  const data = (props.location && props.location.state) || {};\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    raised:false,\n    shadow:1,\n  })\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    history.push({ \n      pathname: '/ankety',\n      state: data\n     })\n  }\n  \n  \n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n      style={{ minHeight: \"100vh\" }}\n      >\n      <Grid>\n        <Card sx={{ maxWidth: \"40%\",  margin: \"auto\"}} \n          className={classes.root} \n          classes={{root: state.raised ? classes.cardHovered : \"\"}}\n          onMouseOver={()=>setState({ raised: true, shadow:3})} \n          onMouseOut={()=>setState({ raised:false, shadow:1 })} \n          raised={state.raised} zdepth={state.shadow} \n          >\n            <Button onClick={handleSubmit}>\n              <CardMedia\n                component=\"img\"\n                image={logo}/>\n            </Button>\n            <Alert icon={false} severity=\"success\" sx={{textAlign: \"center\", display: \"block\"}}>\n              <Typography>Пройти анкетування</Typography>\n            </Alert>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import fetch from 'unfetch';\n\nconst url = `http://localhost:${process.env.PORT}` \n// const url = \"https://dubr-irc.tk:8000\"\n\nconst checkStatus = (response) => {\n    if(response.ok) {\n        return response;\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        response.json().then(e => {\n            error.error = e;\n            // return e;\n        });\n        return Promise.reject(response.statusText);\n    }\n}\n\nexport const login = (user) => \n    fetch(url + '/api/v1/login', {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(user)\n    }).then(checkStatus);\n\nexport const register = (user) => \n    fetch(url + '/api/v1/register', {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n            first_name: user.firstName,\n            last_name : user.lastName,\n            username  : user.username,\n            password  : user.password,\n            phone     : user.phone\n        })\n    }).then(checkStatus);\n\nexport const getAnakety = (token) => \n    fetch(url + '/api/v1/get/ankety', {\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        method: 'GET'\n    }).then(checkStatus);\n\nexport const getChildren = (parents_id, token) => \n    fetch(url + `/api/v1/get/children/${parents_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        method: 'GET'\n    }).then(checkStatus);\n\nexport const deleteChildren = (children_id, token) => \n    fetch(url + `/api/v1/delete/children/${children_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        method: 'DELETE'\n    }).then(checkStatus);\n\nexport const addChildren = (data, token, parents_id) => \n    fetch(url + '/api/v1/create/children', {\n        headers: {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n            parents_id: parents_id,\n            surname : data.surname,\n            name  : data.name,\n            birthday  : data.birthday.toLocaleDateString('en-CA'),\n            weight     : data.weight,\n            height     : data.height\n        })\n    }).then(checkStatus);\n\nexport const editChildren = (data, token) => \n    fetch(url + '/api/v1/edit/children', {\n        headers: {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify({\n            children_id: data.id,\n            surname : data.surname,\n            name  : data.name,\n            birthday  : data.birthday.toLocaleDateString('en-CA'),\n            weight     : data.weight,\n            height     : data.height\n        })\n    }).then(checkStatus);\n\nexport const addAnketa = (data, token) => \n    fetch(url + '/api/v1/create/anketa', {\n        headers: {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n    }).then(checkStatus);\n\nexport const editAnketa = (data, token) => {\n    fetch(url + '/api/v1/edit/anketa', {\n        headers: {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify(data)\n    }).then(checkStatus);\n}\n\nexport const getAnaketa = (data) => \n    fetch(url + `/api/v1/get/anketa/${data.anketa_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token\n        },\n        method: 'GET'\n    }).then(checkStatus);  \n\nexport const deleteAnketa = (data) => {\n    fetch(url + `/api/v1/delete/anketa/${data.anketa_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'DELETE',\n        body: JSON.stringify(data)\n    }).then(checkStatus);\n}\n\nexport const addAnswer = (data, token) => {\n    fetch(url + '/api/v1/create/child_answer', {\n        headers: {\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({answers: data})\n    }).then(checkStatus);\n}\n\nexport const getStatistic = (data) => \n    fetch(url + `/api/v1/get/anketa/${data.anketa_id}/children/${data.children_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token\n        },\n        method: 'GET'\n    }).then(checkStatus);\n\n// export const getAllChildren = (token) => \n//     fetch(url + '/api/v1/get/all/children', {\n//         headers: {\n//             'Authorization': 'Bearer ' + token\n//         },\n//         method: 'GET'\n//     }).then(checkStatus);\n\nexport const getAllChildrenByAnketa = (anketa_id, token) => \n    fetch(url + `/api/v1/get/all/children/anketa/${anketa_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        method: 'GET'\n    }).then(checkStatus);\n\nexport const getAllChildrenByAnketaAndParent = (anketa_id, parents_id, token) => \n    fetch(url + `/api/v1/get/all/children/anketa/${anketa_id}/parent/${parents_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + token\n        },\n        method: 'GET'\n    }).then(checkStatus);\n\n// export const getAllParents = (token) => \n//     fetch(url + '/api/v1/get/all/parents', {\n//         headers: {\n//             'Authorization': 'Bearer ' + token\n//         },\n//         method: 'GET'\n//     }).then(checkStatus);\n\nexport const hasAnswersExist = (data) => \n    fetch(url + '/api/v1/exist/answers', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({check: data.check})\n    }\n).then(checkStatus);\n\nexport const getUserByUsername = (data) => \n    fetch(url + `/api/v1/get/user/${data.username}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n        },\n        method: 'GET'\n    }\n).then(checkStatus);\n\nexport const isExistsUser = (data) => \n    fetch(url + `/api/v1/exist/user/${data.parents_id}/username/${data.username}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n        },\n        method: 'GET'\n    }\n).then(checkStatus);\n\nexport const editUser = (data) => \n    fetch(url + '/api/v1/edit/user', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify({check: data.user})\n    }\n).then(checkStatus);\n\nexport const editPassword = (data) => \n    fetch(url + '/api/v1/edit/password', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify({\n            parents_id: data.parents_id,\n            password: data.password\n        })\n    }\n).then(checkStatus);\n\nexport const getAdmins = (data) => \n    fetch(url + '/api/v1/get/all/admins', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n        },\n        method: 'GET'\n    }\n).then(checkStatus);\n\nexport const addAdmin = (data) => \n    fetch(url + '/api/v1/create/admin', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(data.admin)\n    }\n).then(checkStatus);\n\nexport const editAdmin = (data) => \n    fetch(url + '/api/v1/edit/admin', {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n            'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify(data.admin)\n    }\n).then(checkStatus);\n\nexport const deleteAdmin = (data) => \n    fetch(url + `/api/v1/delete/admin/${data.admin_id}`, {\n        headers: {\n            'Authorization': 'Bearer ' + data.token,\n        },\n        method: 'DELETE'\n    }\n)","import React, {useState} from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { login } from '../../api/client';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://irc.dubredu.rv.ua/\">\r\n        Дубровийьки ІРЦ\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst SignIn = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    username: false,\r\n    password: false,\r\n    onFailure: false\r\n  });\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const checkFields = (user) => {\r\n    for (const val in user) {\r\n      if (!user[val]) {\r\n        handleInputChange(val, true)\r\n        return false;\r\n      } else {\r\n        handleInputChange(val, false)\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    \r\n    // eslint-disable-next-line no-console\r\n    const user = {\r\n      username: data.get('username'),\r\n      password: data.get('password'),\r\n    };\r\n    if (checkFields(user)) {\r\n      login(user)\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n          if (!data.parents_id) {\r\n            throw Error(\"User not found\")\r\n          }\r\n          history.push({ \r\n            pathname: '/ankety',\r\n            state: data\r\n           })\r\n      }).catch(() => {\r\n        setState({onFailure: true})\r\n      })\r\n    }\r\n  }\r\n \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          </Avatar>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Ваш логін\"\r\n              name=\"username\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              error={state.username}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Ваш пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              error={state.password}\r\n            />\r\n            <Collapse in={state.onFailure}>\r\n              <Alert severity=\"error\">Невірний логін або пароль</Alert>\r\n            </Collapse>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Увійти\r\n            </Button>\r\n            <Grid container direction=\"row-reverse\">\r\n              <Grid item> \r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Не маєте акаунта? Зареєструватися\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignIn","import React, {useState} from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button'; \r\nimport Alert from '@mui/material/Alert';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { register } from '../../api/client';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"http://irc.dubredu.rv.ua/\">\r\n        Дубровийьки ІРЦ\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const [state, setState] = useState({\r\n    isFirstName: false,\r\n    isLastName: false,\r\n    isUsername: false,\r\n    isPhone: false,\r\n    isPassword: false,\r\n    isSuccess: false,\r\n    isAlert: false,\r\n    phoneComment: \"\"\r\n  });\r\n\r\n  const handleInputChange = (name, value) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  const checkFields = (user) => {\r\n    if (user.isPhone.length < 13 || user.isPhone.length > 13 || user.isPhone.substring(1,13).match(/^[0-9]+$/) === null) {\r\n      setState({phoneComment: \"Неправильний номер\", isPhone: true})\r\n    } else {\r\n      setState({phoneComment: \"\", isPhone: false})\r\n    }\r\n    for (const val in user) {\r\n      if (!user[val]) {\r\n        handleInputChange(val, true)\r\n        return false;\r\n      } else {\r\n        handleInputChange(val, false)\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    // eslint-disable-next-line no-console\r\n    const user = {\r\n      firstName : data.get('first_name'),\r\n      lastName  : data.get('last_name'),\r\n      username  : data.get('username'),\r\n      password  : data.get('password'),\r\n      phone     : data.get('phone')\r\n    };\r\n\r\n    const checkUser = {\r\n      isFirstName : user.firstName,\r\n      isLastName  : user.lastName,\r\n      isUsername  : user.username,\r\n      isPassword  : user.password,\r\n      isPhone     : user.phone\r\n    }\r\n    \r\n    if (checkFields(checkUser)) {\r\n      register(user)\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        if (data.status_code === 200) {\r\n          setState({isSuccess: true, isAlert: false})\r\n        } else {\r\n          setState({isSuccess: false, isAlert: true})\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"err\" + err.message)\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Реєстрація користувача\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"first_name\"\r\n              label=\"Ім'я\"\r\n              name=\"first_name\"\r\n              autoComplete=\"off\"\r\n              error={state.isFirstName}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"last_name\"\r\n              label=\"Прізвище\"\r\n              name=\"last_name\"\r\n              autoComplete=\"off\"\r\n              error={state.isLastName}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Логін\"\r\n              name=\"username\"\r\n              autoComplete=\"off\"\r\n              error={state.isUsername}\r\n            />    \r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"phone\"\r\n              label=\"Телефон\"\r\n              id=\"phone\"\r\n              helperText={state.phoneComment}\r\n              autoComplete=\"off\"\r\n              defaultValue=\"+380\"\r\n              error={state.isPhone}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              error={state.isPassword}\r\n            />\r\n            <Collapse in={state.isSuccess}>\r\n              <Alert severity=\"success\" action={\r\n                <Link href=\"/signin\" variant=\"body2\" underline=\"none\" color=\"black\">\r\n                  <Button color=\"inherit\" size=\"small\">\r\n                    Увійти\r\n                  </Button>\r\n                </Link>\r\n              }>Ви успішно зареєстровані!</Alert>\r\n            </Collapse>\r\n            <Collapse in={state.isAlert}>\r\n              <Alert severity=\"error\">Користувач з таким логіном вже зареєстрований!</Alert>\r\n            </Collapse>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Зареєструвати\r\n            </Button>\r\n            <Grid container direction=\"row-reverse\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\" underline=\"none\" color=\"primary\">\r\n                  {\"Вже маєте акаунт? Увійти\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable, { MTableBodyRow } from \"@material-table/core\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Alert from '@mui/material/Alert';\nimport { useHistory } from \"react-router-dom\";\n\n \nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n \nconst Table = ({\n  columns, \n  parents,\n  data, \n  handleRowDelete, \n  handleRowAdd, \n  handleRowUpdate, \n  selectedAnketa,\n  iserror, \n  errorMessages\n}) => {\n  const history = useHistory();\n \n  return (\n    <div>\n            {iserror && \n              <Alert severity=\"error\">\n                  {errorMessages.map((msg, i) => {\n                      return <div key={i}>{msg}</div>\n                  })}\n              </Alert>\n            }       \n            <MaterialTable mt={90}\n              title=\"Виберіть дитину\"\n              columns={columns}\n              data={data}\n              icons={tableIcons}\n              options={{\n                search: false,\n                pageSize:3,       // make initial page size\n                emptyRowsWhenPaging: true,   //to make page size fix in case of less data rows\n                pageSizeOptions:[3,6,12],    // rows selection options\n                actionsColumnIndex: -1\n                }}\n              components={{\n                  Row: (props) => {\n                    return (\n                      <MTableBodyRow \n                        {...props} \n                        persistEvents \n                        onRowClick={(event, children) => {\n                          parents.child = children\n                          parents.anketa_id = selectedAnketa.anketa_id\n                          parents.name_of_anketa = selectedAnketa.name_of_anketa\n                          history.push({ \n                            pathname: '/anketa',\n                            state: parents\n                           })\n                        }} \n                        /* onRowDoubleClick={...} */ \n                      />\n                    );\n                  },\n                }}\n              editable={{\n                onRowUpdate: async (newData, oldData) => {\n                  await handleRowUpdate(newData, oldData)\n                },\n                onRowAdd: async (newData) => {\n                  await handleRowAdd(newData)\n                },\n                onRowDelete: async (oldData) => {\n                  await handleRowDelete(oldData)\n                }\n              }}\n              localization={{\n                header: {\n                    actions: ''\n                },\n                body: {\n                    emptyDataSourceMessage: 'Додайте вашу дитину',\n                    editRow: {\n                      deleteText: 'Ви дійсно бажаєте видалити дані?'\n                    }\n                }\n            }}\n            />\n    </div>\n  );\n}\n \nexport default Table;","import React from 'react';\nimport { grey } from '@mui/material/colors';\nimport { styled } from '@mui/material/styles';\nimport Table from './Table';\n\nimport {\n  Box,\n  Typography,\n  SwipeableDrawer,\n} from '@mui/material';\n\nconst drawerBleeding = 30;\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : grey[800],\n  }));\n    \nconst Puller = styled(Box)(({ theme }) => ({\n  width: 30,\n  height: 6,\n  backgroundColor: theme.palette.mode === 'light' ? grey[300] : grey[900],\n  borderRadius: 3,\n  position: 'absolute',\n  top: 8,\n  left: 'calc(50% - 15px)',\n}));\n\nconst SwipedTable = ({\n    container, \n    openChildrend, \n    toggleDrawer, \n    selectedAnketa,\n    columns, \n    parents,\n    children, \n    handleRowDelete, \n    handleRowAdd, \n    handleRowUpdate, \n    iserror, \n    errorMessages}) => {\n\n    return (\n        <SwipeableDrawer\n            container={container}\n            anchor=\"bottom\"\n            open={openChildrend}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            swipeAreaWidth={drawerBleeding}\n            disableSwipeToOpen={false}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            <StyledBox\n              sx={{\n                position: 'absolute',\n                top: -drawerBleeding,\n                borderTopLeftRadius: 8,\n                borderTopRightRadius: 8,\n                visibility: 'visible',\n                right: 0,\n                left: 0,\n              }}\n            >\n              <Puller />\n              <Typography sx={{ p: 2, color: 'text.secondary' }}></Typography>\n            </StyledBox>\n              <Table \n                columns={columns} \n                parents={parents}\n                data={children} \n                handleRowDelete={handleRowDelete} \n                handleRowAdd={handleRowAdd}\n                handleRowUpdate={handleRowUpdate}\n                selectedAnketa={selectedAnketa}\n                iserror={iserror} \n                errorMessages={errorMessages}/>\n        </SwipeableDrawer>\n    )\n}\n\nexport default SwipedTable","import * as React from 'react';\n\nimport { \n    styled, \n    useTheme \n} from '@mui/material/styles';\n\nimport {\n    Box,\n    List,\n    Drawer,\n    Divider,\n    Toolbar,\n    ListItem,\n    Typography,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    Button,  \n} from '@mui/material';\nimport { v4 } from 'uuid'\n\n\nimport MuiAppBar from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ChildCareIcon from '@mui/icons-material/ChildCare';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\n\nimport { useHistory } from \"react-router-dom\"\n\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: drawerWidth,\n    }),\n  }));\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n    ...(open && {\n    transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n    }),\n}),\n);\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n}));\n\nconst RightMenuStats = ({\n  open, \n  handleDrawerOpen, \n  handleDrawerClose, \n  parents,\n  isNotShowButton}) => {\n  const history = useHistory();  \n  const theme = useTheme();\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <AppBar position=\"fixed\" open={open}>\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap sx={{ flexGrow: 1 }} component=\"div\">\n                {\n                  !isNotShowButton ?  \n                  <div>\n                    <Button \n                      style={{backgroundColor: '#fff', color: 'rgb(145 143 143)'}}\n                      onClick={() => {\n                        history.push({ \n                            pathname: '/ankety',\n                            state: parents\n                        })\n                    }}\n                    >\n                      <ArrowBackIosIcon/>\n                    </Button>\n                  </div> : ''\n                }\n              </Typography>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                onClick={handleDrawerOpen}\n                sx={{ ...(open && { display: 'none' }) }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Main open={open}>\n            <DrawerHeader />\n            \n          </Main>\n          <Drawer\n            sx={{\n              width: drawerWidth,\n              flexShrink: 0,\n              '& .MuiDrawer-paper': {\n                width: drawerWidth,\n              },\n            }}\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={open}\n          >\n            <DrawerHeader>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </DrawerHeader>\n            <Divider />\n                <List>\n                <ListItem button key={v4()} onClick={() => { \n                        history.push({ \n                          pathname: '/profile',\n                          state: parents\n                        })}}>\n                    <ListItemIcon> \n                      <AccountCircleIcon/>\n                    </ListItemIcon> \n                    <ListItemText primary={'Профіль'} />\n                  </ListItem>\n                  <ListItem button key={v4()} onClick={() => { \n                        history.push({ \n                          pathname: '/children',\n                          state: parents\n                        })}}>\n                    <ListItemIcon> \n                      <ChildCareIcon/>\n                    </ListItemIcon> \n                    <ListItemText primary={'Діти'} />\n                  </ListItem>\n                </List>\n                { parents.role === 'admin' ? \n                  <div>\n                      <ListItem button key={'Статистика'} onClick={() => { \n                        history.push({ \n                          pathname: '/statistics',\n                          state: parents\n                        })}}> \n                        <ListItemIcon> \n                          <EqualizerIcon/>\n                        </ListItemIcon> \n                        <ListItemText primary={'Статистика'} />\n                      </ListItem>\n                      <ListItem button key={v4()} onClick={() => { \n                        history.push({ \n                          pathname: '/dashboard/admin',\n                          state: parents\n                        })}}> \n                        <ListItemIcon> \n                          <AdminPanelSettingsIcon/>\n                        </ListItemIcon> \n                        <ListItemText primary={'Адмін'} />\n                      </ListItem>\n                  </div> : \"\" }\n            <Divider />\n            <List>\n              {['Вийти'].map((text, index) => (\n                <ListItem button key={text} onClick={() => { \n                  history.push({ \n                    pathname: '/'\n                  })}}> \n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n        </Box>\n    )\n}\n\nexport default RightMenuStats","export default __webpack_public_path__ + \"static/media/anketa.a6c01a38.png\";","import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport { IconButton } from '@material-ui/core';\nimport anketaLogo from '../../img/anketa.png';\nimport { CardActionArea } from '@mui/material';\nimport { DeleteOutlined } from '@material-ui/icons'\nimport EditIcon from '@mui/icons-material/Edit';\nimport Box from '@mui/material/Box';\nimport { useHistory } from \"react-router-dom\";\nimport { useConfirm } from 'material-ui-confirm';\n\n\nexport default function AnketaCard({\n    anketa, \n    parents, \n    handleDelete, \n    handleOpenChildren, \n    check\n}) {\n    const history = useHistory();\n    const confirm = useConfirm();\n    const data = {\n        first_name: parents.first_name,\n        last_name: parents.last_name,\n        phone: parents.phone,\n        token: parents.token,\n        role: parents.role,\n        parents_id: parents.parents_id,\n        anketa_id: anketa.anketa_id,\n        name_of_anketa: anketa.name_of_anketa\n    }\n\n    return (\n        <div>\n            <Card >\n                    <CardHeader\n                        action={\n                            <Box>\n                                { parents.role === 'admin' ? \n                                    <div>\n                                        <IconButton onClick={() => {\n                                        history.push({ \n                                            pathname: `/anketa/edit/${anketa.anketa_id}`,\n                                            state: data\n                                            })\n                                        }}>\n                                        <EditIcon />\n                                        </IconButton>\n                                        <IconButton onClick={async () => {\n                                            await check(anketa.anketa_id)\n                                                .then(res => {\n                                                    if (res) {\n                                                        confirm({ \n                                                            title: 'Ви впевнені?', \n                                                            cancellationText: 'Скасувати',\n                                                            confirmationText: 'Підтвердити',\n                                                            description: 'На дану анкету користувачі дали відповіді. У разі видаленя всі їхні відповіді будуть видалені.' })\n                                                           .then(() => {\n                                                               handleDelete(anketa.anketa_id)\n                                                           })\n                                                           .catch(err => {})\n                                                    } else {\n                                                        handleDelete(anketa.anketa_id)\n                                                    }\n                                                })\n                                        }}>\n                                            <DeleteOutlined />\n                                        </IconButton>\n                                    </div> : <Box/>\n                                }\n                                \n                            </Box>\n                        }\n                        title={anketa.name_of_anketa}\n                        subheader={anketa.category}\n                    />\n                    <CardActionArea onClick={() => {\n                        handleOpenChildren(data)\n                    }} className='card-action-area'>\n                    <CardMedia\n                        component=\"img\"\n                        style={{\n                            width: \"auto\",\n                            maxHeight: \"250px\",\n                            margin: \"auto\"\n                        }}\n                        image={anketaLogo}\n                        alt=\"Anketa logo\"\n                    />\n                </CardActionArea>\n            </Card>\n            \n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/plus.cab65bb1.png\";","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport plus from '../../img/plus.png';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function AddAncketa({parents}) {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Card sx={3}>\n            <CardActionArea onClick={() => {\n                 history.push({ \n                  pathname: '/anketa/add',\n                  state: parents\n                 })\n                }} className='card-action-area'>\n                    <CardMedia\n                        component=\"img\"\n                        style={{\n                            width: \"auto\",\n                            maxHeight: \"250px\",\n                            margin: \"auto\",\n                            marginTop: \"44px\",\n                            marginBottom: \"44px\"\n                        }}\n                        image={plus}\n                        alt=\"Anketa logo\"\n                    />\n                </CardActionArea>\n            </Card>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport { Redirect } from \"react-router-dom\"\n// import RightMenu from '../../Components/menu/RightMenu'\nimport SwipedTable from '../../Components/table/SwipedTable'\nimport { deleteAnketa, getAnaketa } from '../../api/client'\nimport RightMenuStats from '../../Components/menu/RightMenuStats'\nimport { ConfirmProvider } from 'material-ui-confirm'\nimport AnketaCard from '../../Components/anketa/AnketaCard'\nimport AddAncketa from '../../Components/anketa/AddAnketa'\n\n\nimport {\n  CssBaseline,\n  CircularProgress\n} from '@mui/material';\n\nimport { \n  Grid,\n  Container \n} from \"@material-ui/core\";\n\nimport { \n  getAnakety, \n  getChildren, \n  deleteChildren, \n  addChildren, \n  editChildren,\n  hasAnswersExist \n} from '../../api/client';\n\n// import { v4 } from 'uuid'\n\n\n  \nconst columns = [\n  {title: \"id\", field: \"id\", hidden: true},\n  {title: \"Прізвище\", field: \"surname\"},\n  {title: \"Ім'я\", field: \"name\"},\n  {title: \"Дата народження\", field: \"birthday\", type: \"date\", format: \"YYYY-dd-mm\"},\n  {title: \"Вага\", field: \"weight\", type: \"numeric\"},\n  {title: \"Зріст\", field: \"height\", type: \"numeric\"}\n]\n\nexport default function Ankety(props) {\n  let data = (props.location && props.location.state) || {};\n  const { window } = props;\n  const [open, setOpen] = useState(false)\n  const [isLoading, setLoading] = useState(true);\n  const { parents_id, token } = data;\n  const [useCount] = useState(0);\n  const [anketa, setAnketa] = useState([]);\n  const [openChildrend, setOpenChildrend] = useState(false);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [children, setChildren] = useState([])\n  const [iserror, setIserror] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n  const [selectedAnketa, setSelectedAnketa] = useState([])\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const validate = (data) => {\n    let errorList = []\n    if(data.surname === undefined || data.surname === ''){\n      errorList.push(\"Будь ласка ведіть ім'я\")\n    }\n    if(data.name === undefined || data.name === ''){\n      errorList.push(\"Будь ласка ведіть прізвище\")\n    }\n    if(data.birthday === undefined || data.birthday === ''){\n      errorList.push(\"Будь ласка ведіть дату народження\")\n    }\n    if(data.weight === undefined || data.weight === ''){\n      errorList.push(\"Будь ласка ведіть вагу\")\n    }\n    if(data.height === undefined || data.height === ''){\n      errorList.push(\"Будь ласка ведіть зріст\")\n    }\n    return errorList\n  }\n\n  const handleRowUpdate = async (newData, oldData) => {\n    //validation\n    if (typeof(newData.birthday) === 'string' ) {\n      newData.birthday = new Date(newData.birthday); \n    }\n\n    let errorList = validate(newData)\n  \n    if (errorList.length > 0) {\n      setErrorMessages(errorList)\n      setIserror(true)\n      throw Error\n    } else { //no error\n      editChildren(newData, token)\n      .then(() => {\n        let updatedChildrend = [...children];\n        const index = updatedChildrend.findIndex(obj => obj.id === oldData.id)\n        updatedChildrend[index] = newData\n        setChildren(updatedChildrend)\n        setIserror(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"Update failed! Server error\"])\n        setIserror(true)\n      })\n    } \n  }\n\n  const handleRowAdd = async (newData) => {\n    //validation\n    let errorList = validate(newData)\n    if (errorList.length > 0) {\n      setErrorMessages(errorList)\n      setIserror(true)\n      throw Error\n    } else { //no error\n      addChildren(newData, token, parents_id)\n      .then(res => res.json())\n      .then(res => {\n        newData.id = res[0].insertId\n        let dataToAdd = [...children];\n        dataToAdd.push(newData);\n        setChildren(dataToAdd);\n        setErrorMessages([])\n        setIserror(false)\n      })\n      .catch(() => {\n        setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n        setIserror(true)\n      })\n    }\n  }\n\n  const handleRowDelete = async (oldData) => {\n    deleteChildren(oldData.id, token)\n      .then(res => {\n        let newChildren = children.filter(children => children.id !== oldData.id )\n        setChildren(newChildren)\n        setErrorMessages([])\n        setIserror()\n      })\n      .catch(err => {\n        setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n        setIserror(true)\n      })\n    }\n\n  const toggleDrawer = (newOpen) => () => {\n      setOpenChildrend(newOpen);\n    };\n    \n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const handleDelete = async (anketa_id) => {\n      // send request to Delete from DB\n      let deleteData = {\n        anketa_id: anketa_id,\n        token: token,\n        delete: {\n          children_answer: [],\n          list_of_answers: [],\n          question: [],\n          section: [],\n          anketa: []\n        }\n      }\n      getAnaketa(deleteData)\n        .then(res => res.json())\n        .then(res => {\n          for (const k_s in res.sections) {\n            const section = res.sections[k_s]\n            deleteData.delete.section.push(section.section_id)\n            for (const k_q in section.questions) {\n              const question = section.questions[k_q]\n              deleteData.delete.question.push(question.question_id)\n              for (const k_a in question.answers) {\n                const answer = question.answers[k_a]\n                deleteData.delete.list_of_answers.push(answer.list_of_answers_id)\n                deleteData.delete.children_answer.push(answer.list_of_answers_id)\n              }\n            }\n          }\n          deleteData.delete.anketa.push(anketa_id)\n          deleteAnketa(deleteData)\n        })\n      const newAnakety = anketa.filter(anketa => anketa.anketa_id !== anketa_id )\n      setAnketa(newAnakety);\n      \n  }\n\n  const check = async (anketa_id) => {\n    let checkData = {\n      anketa_id: anketa_id,\n      token: token,\n      check: []\n    }\n    await getAnaketa(checkData)\n      .then(res => res.json())\n      .then(res => {\n        for (const k_s in res.sections) {\n          const section = res.sections[k_s]\n          for (const k_q in section.questions) {\n            const question = section.questions[k_q]\n            for (const k_a in question.answers) {\n              const answer = question.answers[k_a]\n              checkData.check.push(answer.list_of_answers_id)\n            }\n          }\n        }\n      })\n\n      return hasAnswersExist(checkData)\n        .then(res => res.json())\n        .then(res => {\n          return res.has_answers\n        })\n  }\n\n  const handleOpenChildren = async (anketa_data) => {\n    setSelectedAnketa(anketa_data)\n      getChildren(parents_id, token)\n          .then(data => data.json())\n          .then((data) => {\n            let preperadData = []\n\n            data.forEach((key, val) => {\n              var parts = key.birthday.split('/');\n              var dateString = parts[2] + '-' + parts[1] + '-' + parts[0] \n              key.birthday = new Date(dateString); \n              preperadData.push(key)\n            })\n            setChildren(preperadData)\n      })\n      setOpenChildrend(true)\n    }\n    \n    useEffect(() => {\n      const fetchOffsetAnketa = (token) => {\n        getAnakety(token)\n          .then(res => res.json())\n          .then(anketa => {\n              setAnketa(anketa)\n              setIsAuthorized(true);   \n              setLoading(false); \n          }).catch(err => {\n              setIsAuthorized(false);\n              setLoading(false); \n              return err;\n          })\n      }\n      fetchOffsetAnketa(token) \n    }, [useCount])\n\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else {\n        return (\n          <div sx={{ display: 'flex' }}>\n          <CssBaseline />\n          {/* <RightMenu\n            open={open}\n            handleDrawerOpen={handleDrawerOpen}\n            handleDrawerClose={handleDrawerClose}\n            anketa={anketa}\n            parents={data}\n            handleDelete={handleDelete}\n            handleOpenChildren={handleOpenChildren}\n            check={check}\n            children={children} \n          /> */}\n\n          <RightMenuStats\n            open={open}\n            handleDrawerOpen={handleDrawerOpen}\n            handleDrawerClose={handleDrawerClose}\n            parents={data}\n          />\n          \n          <Container>\n                <Grid container spacing={3}>\n                    {/* Change in the future to check if user admin then show AddAncketa */}\n                    { data.role === 'admin' ? <Grid item key={anketa.anketa_id} xs={12} md={6} lg={4}>\n                        <AddAncketa parents={data}/>\n                    </Grid> : <Grid/>}\n                    {anketa.map(anketa => (\n                      <ConfirmProvider> \n                        <Grid item key={anketa.anketa_id} xs={12} md={6} lg={4}>\n                            <AnketaCard \n                              anketa={anketa} \n                              parents={data} \n                              handleDelete={handleDelete} \n                              handleOpenChildren={handleOpenChildren}\n                              check={check}\n                              isNotShowButton={true}\n                            />\n                        </Grid>\n                      </ConfirmProvider>\n                    ))}\n                </Grid>\n            </Container>\n         \n         <SwipedTable\n            container={container}\n            openChildrend={openChildrend}\n            toggleDrawer={toggleDrawer}\n            selectedAnketa={selectedAnketa}\n            columns={columns} \n            parents={data}\n            children={children} \n            handleRowDelete={handleRowDelete} \n            handleRowAdd={handleRowAdd}\n            handleRowUpdate={handleRowUpdate}\n            iserror={iserror} \n            errorMessages={errorMessages}\n          />\n        </div>\n      )\n  }\n}\n","import React, {useState} from 'react'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport { v4 } from 'uuid'\nimport {\n    Alert,\n    Radio,\n    Button,\n    Typography,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    Snackbar,\n    FormControlLabel\n} from '@mui/material'\nimport { \n    Grid,\n    Card,\n    Container \n} from \"@material-ui/core\";\nimport { addAnswer } from '../../api/client'\n\nexport default function Form({\n    data,\n    history,\n    anketa\n}) {\n    const [value, setValue] = useState([]);\n    // const [openNotify, setOpenNotify] = useState(false)\n    const [openNotifyS, setOpenNotifyS] = useState(false)\n\n    // const handleClose = () => {\n    //     setOpenNotify(false)\n    // };\n\n    // const handleOpen = () => {\n    //     setOpenNotify(true)\n    // };\n    \n    const handleCloseS = () => {\n        setOpenNotifyS(false)\n    };\n\n    const handleOpenS = () => {\n        setOpenNotifyS(true)\n    };\n\n    const addValue = (children_id, answer_id, question_id) => {\n        const newValue = {\n            children_id: children_id,\n            list_of_answers_id: answer_id,\n            question_id: question_id\n        }\n        let dataToAdd = [...value];\n        \n        let newArray = dataToAdd.filter(ans => ans.question_id !== question_id )\n\n        newArray.push(newValue);\n        setValue(newArray);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        data.is_success = true\n        // if (countQuestion()) {\n            handleOpenS()\n            addAnswer(value ,data.token)\n            setTimeout(function () {\n                history.push({ \n                    pathname: '/ankety',\n                    state: data\n                })\n            }, 2800);\n        // }\n    }\n\n    // const countQuestion = () => {\n    //     let count = 0\n    //     for (const s_k in anketa.sections) {\n    //         let q_length = anketa.sections[s_k].questions.length\n    //         count = q_length + count\n            \n    //     }\n    //     if (count !== value.length) {\n    //         handleOpen()\n    //         return false\n    //     } else {\n    //         return true\n    //     }\n    // }\n\n    return (\n        <div>\n            {/* <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'}}\n                open={openNotify}\n                onClose={handleClose}\n                autoHideDuration={6000}\n                key={v4()}\n            > \n                <Alert onClose={handleClose} severity=\"warning\" sx={{ width: '100%' }}>\n                    Будь ласка дайте відповіді на всі запитання\n                </Alert>\n            </Snackbar> */}\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'}}\n                open={openNotifyS}\n                onClose={handleCloseS}\n                autoHideDuration={6000}\n                key={v4()}\n            > \n                <Alert onClose={handleCloseS} severity=\"success\" sx={{ width: '100%' }}>\n                    Ви успішно пройшли анкетування\n                </Alert>\n            </Snackbar>\n            <Box component=\"form\" onSubmit={handleSubmit} id=\"anketa\" noValidate>\n                <Container> \n                    <Grid container spacing={3}>\n                        {\n                            anketa.sections.map(section => {\n                                let questionCount = 0\n                                return (\n                                    <Grid item key={anketa.anketa_id} md={12} lg={12} xs={12}>\n                                        <Card>\n                                        <TextField\n                                            id=\"filled-read-only-input\"\n                                            defaultValue={section.name_of_section}\n                                            InputProps={{\n                                                readOnly: true,\n                                            }}\n                                            variant=\"filled\"\n                                            disabled\n                                            fullWidth={true}\n                                            />\n                                            {\n                                                section.questions.map(question => {\n                                                    questionCount++\n                                                    return (\n                                                        <Grid container spacing={3}>\n                                                            <Grid item key={anketa.anketa_id} md={12} lg={12} xs={12}>\n                                                                <Card>\n                                                                    <FormControl component=\"fieldset\">\n                                                                        <FormLabel component=\"legend\">\n                                                                            <Typography variant=\"h6\" gutterBottom component=\"div\" color='inherit' style={{marginLeft: '10px'}}>\n                                                                                {questionCount}. {question.question}\n                                                                            </Typography>\n                                                                        </FormLabel>\n                                                                        <RadioGroup\n                                                                            aria-label=\"gender\"\n                                                                            name=\"radio-buttons-group\"\n                                                                            // onChange={handleChange}\n                                                                        >\n                                                                        {\n                                                                            question.answers.map(answer => {\n                                                                                return (\n                                                                                    <FormControlLabel \n                                                                                        value={answer.name_of_answer} \n                                                                                        control={<Radio />} \n                                                                                        label={answer.name_of_answer} \n                                                                                        style={{marginLeft: '20px'}}\n                                                                                        onChange={() => {\n                                                                                            addValue(data.child.id, answer.list_of_answers_id, question.question_id)\n                                                                                        }}\n                                                                                    />\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                        </RadioGroup>\n\n                                                                    </FormControl>\n                                                                </Card>\n                                                                \n\n                                                            </Grid>\n                                                        </Grid>\n                                                        \n                                                    )\n                                                })\n                                            }\n                                        </Card>\n                                    </Grid>\n                                )\n                            })\n                        }\n                        \n                        <Grid container >\n                            <Grid item md={7} lg={7}></Grid>\n                            <Grid item md={3} lg={3}>\n                                <Button \n                                    style={{backgroundColor: 'grey'}}\n                                    variant=\"contained\"\n                                    onClick={() => {\n                                        history.push({ \n                                            pathname: '/ankety',\n                                            state: data\n                                        })\n                                    }}\n                                >Повернутись назад</Button>\n                            </Grid>\n                            <Grid item md={2} lg={2}>\n                                <Button \n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                > Відправити</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport { verify } from  'jsonwebtoken'\nimport { useHistory } from \"react-router-dom\"\nimport { getAnaketa } from '../../api/client'\nimport { Redirect } from \"react-router-dom\"\nimport {\n    Grid,\n    Alert,\n    Typography,\n    CircularProgress,\n} from '@mui/material';\nimport Form from '../../Components/anketa/Form'\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nconst Anketa = (props) => {\n    const data = (props.location && props.location.state) || {};\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [anketa, setAnketa] = useState([])\n    const [useCount] = useState(0)\n    const [isLoading, setLoading] = useState(true)\n    const [error, setError] = useState()\n    const [scroll] = useState('paper')\n\n    const descriptionElementRef = React.useRef(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            verify(data.token, 'TOKEN_KEY')\n            setIsAuthorized(true)\n            getAnaketa(data)\n                .then(res => res.json())\n                .then(data => {\n                    setAnketa(data)\n                    setLoading(false)\n                })\n        } catch (err) {\n            setError('Вибачте але ваш токен не валідний щоб авторизуватись')\n        }\n      }, [useCount])\n\n    if (error) {\n        return (\n            <Alert severity=\"error\">{error}</Alert>\n        )\n    }\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else {\n        return (\n            <div>\n               <div style={{\n                   display: 'block',\n                   textAlign: 'center',\n                   paddingTop: '5%',\n                   backgroundColor: '#1976d2'\n               }}\n               >\n                   \n               </div>\n               <div>\n               <Dialog\n                    open={true}\n                    onClose={true}\n                    scroll={scroll}\n                    fullWidth={true}\n                    maxWidth='md'\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">\n                        <Typography variant=\"h5\" gutterBottom component=\"div\" style={{\n                            display: 'block', \n                            textAlign: 'center',\n                            fontWeight: 'bold'\n                        }}\n                        >\n                            {data.name_of_anketa}\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent dividers={scroll === 'paper'}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        <Form\n                            data={data}\n                            history={history}\n                            anketa={anketa}\n                        />\n                    </DialogContentText>\n                    </DialogContent>\n                </Dialog>\n               </div>\n               <div>\n               \n               </div>\n            </div>\n        )\n    }\n}\n\nexport default Anketa","import React from 'react'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport { v4 } from 'uuid'\nimport {\n    Grid,\n    Button,\n    Tooltip\n} from '@mui/material'\nimport AddBoxIcon from '@mui/icons-material/AddBox'\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\n\nexport default function Tree({\n    data,\n    history,\n    handleSubmit,\n    anketa,\n    section,\n    question,\n    answer,\n    addSection,\n    deleteSection,\n    addQuestion,\n    deleteQuestion,\n    addAnswer,\n    deleteAnswer\n}) {\n\n    let indexSection = 1\n    return (\n        <Box\n            sx={{\n\n                width: '90%',\n                margin: 'auto',\n                display: 'block',\n                flexDirection: 'column',\n                alignItems: 'center'\n            }}\n        >\n            <Box component=\"form\" onSubmit={handleSubmit} id=\"anketa\" noValidate sx={{ mt: 2 }}>\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item xs={1} md={1}>\n                        <Tooltip title=\"Додати блок\"> \n                            <Button style={{color: 'grey'}} onClick={() => {\n                                    addSection(anketa[0].id, indexSection)\n                                }}>\n                                <AddBoxIcon fontSize=\"large\"/>\n                            </Button>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs={5} md={5} form=\"anketa\">\n                        <TextField\n                            key={v4()}\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id={anketa[0].id}\n                            label={anketa[0].label}\n                            name={anketa[0].name}\n                            autoComplete=\"off\"\n                            defaultValue={anketa[0].value}\n                            // autoFocus\n                            onChange={(e) => {\n                                anketa[0].value = e.target.value\n                            }}\n                            //   error={state.username}\n                        /> \n                    </Grid>\n                    <Grid item xs={1} md={1}></Grid>\n                    <Grid item xs={4} md={4} form=\"anketa\">\n                        <TextField\n                            key={v4()}\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"category\"\n                            label=\"Категорія анкети\"\n                            name=\"category\"\n                            autoComplete=\"off\"\n                            defaultValue={anketa[0].category}\n                            // autoFocus\n                            onChange={(e) => {\n                                anketa[0].category = e.target.value\n                            }}\n                            //   error={state.username}\n                        /> \n                    </Grid>\n                </Grid>\n                {anketa.map(anketa => {\n                    return (\n                        section.map(section => {\n                            if (anketa.id === section.parentid) {\n                                indexSection++\n                                let indexQuestion = 1\n                                return (\n                                    <Grid container direction=\"row\" alignItems=\"center\" key={v4()}>\n                                        <Grid item xs={2} md={2} style={{textAlign: 'right'}}>\n                                            <Tooltip title=\"Додати питанння\"> \n                                                <Button style={{color: 'grey'}} onClick={() => {\n                                                    addQuestion(section.id, indexQuestion)\n                                                }}>\n                                                    <AddCircleOutlineIcon fontSize=\"large\"/>\n                                                </Button>\n                                            </Tooltip>\n                                        </Grid>\n                                        <Grid item xs={8} md={9}>\n                                            <TextField\n                                                key = {section.id}\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                id={section.id}\n                                                label={section.label}\n                                                name={section.name}\n                                                autoComplete=\"off\"\n                                                // autoFocus\n                                                defaultValue={section.value}\n                                                onChange={(e) => {\n                                                    section.value = e.target.value\n                                                }}\n                                                //   error={state.username}\n                                            /> \n                                        </Grid>\n                                        <Grid item xs={1} md={1} style={{textAlign: 'right'}}>\n                                            <Tooltip title=\"Видалити блок\"> \n                                                <Button style={{color: 'grey'}} onClick={() => {\n                                                        deleteSection(section.id)\n                                                    }}>\n                                                    <DeleteOutlineIcon fontSize=\"large\"/>\n                                                </Button>\n                                            </Tooltip>\n                                        </Grid>\n                                            {question.map(question => {\n                                                if (section.id === question.parentid) {\n                                                    indexQuestion++\n                                                    let indexAnswer = 1\n\n                                                    return (\n                                                        <Grid container direction=\"row\" alignItems=\"center\" key={v4()}>\n                                                            <Grid item xs={3} md={3} style={{textAlign: 'right'}}>\n                                                                <Tooltip title=\"Додати відповідь\"> \n                                                                    <Button style={{color: 'grey'}} onClick={() => {\n                                                                        addAnswer(question.id, indexAnswer)\n                                                                    }}>\n                                                                        <AddIcon fontSize=\"large\"/>\n                                                                    </Button>\n                                                                </Tooltip>\n                                                            </Grid>\n                                                            <Grid item xs={7} md={8}>\n                                                                <TextField\n                                                                    key = {question.id}\n                                                                    margin=\"normal\"\n                                                                    required\n                                                                    fullWidth\n                                                                    id={question.id}\n                                                                    label={question.label}\n                                                                    name={question.name}\n                                                                    autoComplete=\"off\"\n                                                                    // autoFocus\n                                                                    defaultValue={question.value}\n                                                                    onChange={(e) => {\n                                                                        question.value = e.target.value\n                                                                    }}\n                                                                    //   error={state.username}\n                                                                /> \n                                                            </Grid>\n                                                            <Grid item xs={1} md={1} style={{textAlign: 'right'}}>\n                                                                <Tooltip title=\"Видалити питання\"> \n                                                                    <Button style={{color: 'grey'}} onClick={() => {\n                                                                            deleteQuestion(question.id)\n                                                                        }}>\n                                                                        <DeleteOutlineIcon fontSize=\"large\"/>\n                                                                    </Button>\n                                                                </Tooltip>\n                                                            </Grid>\n                                                            {answer.map(answer => {\n                                                                if (question.id === answer.parentid) {\n                                                                    indexAnswer++\n                                                                    return (\n                                                                        <Grid container direction=\"row\" alignItems=\"center\" key={v4()}>\n                                                                            <Grid item xs={4} md={4}>\n                                                                            </Grid>\n                                                                            <Grid item xs={6} md={7}>\n                                                                                <TextField\n                                                                                    key = {answer.id}\n                                                                                    margin=\"normal\"\n                                                                                    required\n                                                                                    fullWidth\n                                                                                    id={answer.id}\n                                                                                    label={answer.label}\n                                                                                    name={answer.name}\n                                                                                    autoComplete=\"off\"\n                                                                                    // autoFocus\n                                                                                    defaultValue={answer.value}\n                                                                                    onChange={(e) => {\n                                                                                        answer.value = e.target.value\n                                                                                    }}\n                                                                                    //   error={state.username}\n                                                                                /> \n                                                                            </Grid>\n                                                                            <Grid item xs={1} md={1} style={{textAlign: 'right'}}>\n                                                                                <Tooltip title=\"Видалити відповідь\"> \n                                                                                    <Button style={{color: 'grey'}} onClick={() => {\n                                                                                            deleteAnswer(answer.id)\n                                                                                        }}>\n                                                                                        <DeleteOutlineIcon fontSize=\"large\"/>\n                                                                                    </Button>\n                                                                                </Tooltip>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    )\n                                                                }\n                                                            })}\n                                                        </Grid>\n                                                    )\n                                                }\n                                            })}\n                                    </Grid>\n                                )\n                            }\n                        })\n                    )\n                })}\n                <Grid container direction=\"row\" alignItems=\"center\" key={v4()} style={{marginBottom: '70px'}}> \n                    <Grid item xs={5.5} md={5.5}> \n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            style={{backgroundColor: 'grey'}}\n                            onClick={() => {\n                                history.push({ \n                                    pathname: '/ankety',\n                                    state: data\n                                })\n                            }}\n                            size=\"large\"\n                        >\n                            Повернутись назад\n                        </Button>\n                    </Grid>\n                    <Grid item xs={0.5} md={0.5}> </Grid>\n                    <Grid item xs={5.5} md={5.5}> \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            size=\"large\"\n                        >\n                            Зберегти\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Box>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { v4 } from 'uuid'\nimport {\n    Grid,\n    Alert,\n    Typography,\n    CircularProgress,\n    Button\n} from '@mui/material';\nimport { addAnketa } from '../../api/client'\nimport { verify } from  'jsonwebtoken'\nimport Tree from '../../Components/anketa/Tree'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AddAnketa = (props) => {\n    const history = useHistory();\n    const data = (props.location && props.location.state) || {};\n    const [isAuthorized, setIsAuthorized] = useState(false);\n    const [anketa] = useState([\n        {\n            id: \"name_of_ankety\",\n            name: \"anketa\",\n            id_feild: \"name_of_ankety\",\n            label: \"Назва анкети\",\n            value: \"\",\n            category: \"\",\n            parentid: 0\n        }\n    ])\n    const [section, setSection] = useState([])\n    const [question, setQuestion] = useState([])\n    const [answer, setAnswer] = useState([])\n    const [useCount] = useState(0);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n\n    useEffect(() => {\n        try {\n            verify(data.token, 'TOKEN_KEY')\n            setIsAuthorized(true)\n            setLoading(false)\n        } catch (err) {\n            setError('Вибачте але ваш токен не валідний щоб авторизуватись')\n        }\n      }, [useCount])\n\n    const genereteJson = () => {\n        let requets = {\n            name_of_anketa: anketa[0].value,\n            category: anketa[0].category,\n            sections: []\n        }\n        section.forEach(s_v => {\n            let section = {\n                name_of_section: s_v.value,\n                questions: []\n            }\n            question.forEach(q_v => {\n                let questions = {\n                    question: q_v.value,\n                    answers: []\n                }\n                answer.forEach(a_v => {\n                    let answer = {\n                        name_of_answer: a_v.value\n                    }\n                    if (q_v.id === a_v.parentid) {\n                        questions.answers.push(answer)\n                    }\n                })\n                if (s_v.id === q_v.parentid) {\n                    section.questions.push(questions)\n                }\n            })\n            requets.sections.push(section)\n        })\n        return requets\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const dataJSON = genereteJson()\n        addAnketa(dataJSON, data.token)\n        history.push({ \n            pathname: '/ankety',\n            state: data\n        })\n    }\n    \n    // const updateAnketa = (data) => {\n    //     let updatedAnketa= [...anketa];\n    //     const index = updatedAnketa.findIndex(obj => obj.id === data.id)\n    //     updatedAnketa[index] = data\n    //     setAnketa(updatedAnketa)\n    // }\n    \n    const addSection = (parentId, index) => {\n        let newData = {\n            id: \"name_of_section_\" + index + \"_\" + v4(),\n            name: \"name_of_section_\" + index + \"_\" + v4(),\n            id_feild: \"name_of_section_\" + index + \"_\" + v4(),\n            label: \"Блок \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...section];\n        dataToAdd.push(newData);\n        setSection(dataToAdd);\n    }\n\n    const deleteSection = (id) => {\n        let newSection = section.filter(section => section.id !== id )\n        \n        let newQuestion = question.filter(question => question.parentid !== id)\n\n        let deleteQuestion = question.filter(question => question.parentid === id)\n\n        deleteQuestion.forEach((v, k) => {\n            let newAnswer = answer.filter(answer => answer.parentid !== v.id)\n            setAnswer(newAnswer)\n        })\n\n        setQuestion(newQuestion)\n        setSection(newSection)\n    }\n    \n    const addQuestion = (parentId, index) => {\n        let newData = {\n            id: \"question_\" + index + \"_\" + v4(),\n            name: \"question_\" + index + \"_\" + v4(),\n            id_feild: \"question_\" + index + \"_\" + v4(),\n            label: \"Запитання \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...question];\n        dataToAdd.push(newData);\n        setQuestion(dataToAdd);\n    }\n\n    const deleteQuestion = (id) => {\n        let newQuestion = question.filter(question => question.id !== id)\n        let newAnswer = answer.filter(answer => answer.parentid !== id)\n        \n        setAnswer(newAnswer)\n        setQuestion(newQuestion)\n    }\n\n    const addAnswer = (parentId, index) => {\n        let newData = {\n            id: \"answer_\" + index + \"_\" + v4(),\n            name: \"answer_\" + index + \"_\" + v4(),\n            id_feild: \"answer_\" + index + \"_\" + v4(),\n            label: \"Варіант відповіді  \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...answer];\n        dataToAdd.push(newData);\n        setAnswer(dataToAdd);\n    }\n\n    const deleteAnswer = (id) => {\n        let newAnswer = answer.filter(answer => answer.id !== id)\n        setAnswer(newAnswer)\n    }\n\n    if (error) {\n        return (\n            <Alert severity=\"error\">\n                {error}\n                <Button \n                    variant='contained' \n                    color='warning'\n                    style={{marginLeft: '50px'}}\n                    onClick={() => {\n                        history.push({ \n                            pathname: '/ankety',\n                            state: data\n                           })\n                    }}\n                >Головна сторінка</Button>\n            </Alert>\n        )\n    }\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else {\n        \n        return (\n            <div>\n                <Typography component=\"h1\" variant=\"h5\" style={{\n                    display: 'block', \n                    textAlign: 'center',\n                    marginTop: 50\n                }}\n                >\n                    Додати анкету\n                </Typography>\n                \n                <Tree\n                    data={data}\n                    history={history}\n                    handleSubmit={handleSubmit}\n                    anketa={anketa}\n                    section={section}\n                    question={question}\n                    answer={answer}\n                    addSection={addSection}\n                    deleteSection={deleteSection}\n                    addQuestion={addQuestion}\n                    deleteQuestion={deleteQuestion}\n                    addAnswer={addAnswer}\n                    deleteAnswer={deleteAnswer}\n\n                />\n            </div>\n        )\n    }\n}\n\nexport default AddAnketa","import React, {useState, useEffect} from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { v4 } from 'uuid'\nimport {\n    Grid,\n    Alert,\n    Button,\n    Typography,\n    CircularProgress\n} from '@mui/material';\nimport { verify } from  'jsonwebtoken'\nimport { useHistory } from \"react-router-dom\"\nimport Tree from '../../Components/anketa/Tree'\nimport { getAnaketa, editAnketa } from '../../api/client'\n\n\nconst EditAnketa = (props) => {\n    const history = useHistory()\n    const data = (props.location && props.location.state) || {}\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [anketa, setAnketa] = useState([])\n    const [section, setSection] = useState([])\n    const [question, setQuestion] = useState([])\n    const [answer, setAnswer] = useState([])\n    const [useCount] = useState(0)\n    const [isLoading, setLoading] = useState(true)\n    const [error, setError] = useState()\n    const [deleteIteam] = useState({\n        children_answer: [],\n        list_of_answers: [],\n        question: [],\n        section: []\n    })\n\n\n    useEffect(() => {\n        try {\n            verify(data.token, 'TOKEN_KEY')\n            setIsAuthorized(true)\n            getAnaketa(data)\n                .then(res => res.json())\n                .then(data => {\n                    putValuesIntoForm(data)\n                    setLoading(false)\n                })\n        } catch (err) {\n            setError('Вибачте але ваш токен не валідний щоб авторизуватись')\n        }\n      }, [useCount])\n\n    const genereteJson = () => {\n        let requets = {\n            anketa_id: data.anketa_id,\n            name_of_anketa: anketa[0].value,\n            category: anketa[0].category,\n            sections: [],\n            delete: deleteIteam\n        }\n        section.forEach(s_v => {\n            let section = {\n                section_id: s_v.section_id,\n                name_of_section: s_v.value,\n                questions: []\n            }\n            question.forEach(q_v => {\n                let questions = {\n                    question_id: q_v.question_id,\n                    question: q_v.value,\n                    answers: []\n                }\n                answer.forEach(a_v => {\n                    let answer = {\n                        list_of_answers_id: a_v.list_of_answers_id,\n                        name_of_answer: a_v.value\n                    }\n                    if (q_v.id === a_v.parentid) {\n                        questions.answers.push(answer)\n                    }\n                })\n                if (s_v.id === q_v.parentid) {\n                    section.questions.push(questions)\n                }\n            })\n            requets.sections.push(section)\n        })\n        return requets\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const dataJSON = genereteJson()\n        editAnketa(dataJSON, data.token)\n        history.push({ \n            pathname: '/ankety',\n            state: data\n        })\n    }\n\n    const putValuesIntoForm = (json) => {\n        const newAnketa = {\n            id: data.anketa_id.toString(),\n            name: \"anketa\",\n            id_feild: \"name_of_ankety\",\n            label: \"Назва анкети\",\n            value: json.name_of_anketa,\n            category: json.category,\n            parentid: 0,\n            anketa_id: data.anketa_id\n        }\n        let index = 1\n        for (const sectionKey in json.sections) {\n            let sectionElement = json.sections[sectionKey]\n            \n            let newSection = {\n                id: \"name_of_section_\" + index + \"_\" + v4(),\n                name: \"name_of_section_\" + index + \"_\" + v4(),\n                id_feild: \"name_of_section_\" + index + \"_\" + v4(),\n                label: \"Блок \" + index,\n                value: sectionElement.name_of_section,\n                parentid: data.anketa_id.toString(),\n                section_id: sectionElement.section_id\n            }\n\n            let index2 = 1\n            for (const questionKey in sectionElement.questions) {\n                let questionElement = sectionElement.questions[questionKey]\n                let newQuestion = {\n                    id: \"question_\" + index2 + \"_\" + v4(),\n                    name: \"question_\" + index2 + \"_\" + v4(),\n                    id_feild: \"question_\" + index2 + \"_\" + v4(),\n                    label: \"Запитання \" + index2,\n                    value: questionElement.question,\n                    parentid: newSection.id,\n                    question_id: questionElement.question_id,\n                    section_id: questionElement.section_id\n                }\n                if (newQuestion.section_id === newSection.section_id) {\n                    question.push(newQuestion);\n                }\n                let index3 = 1\n                for (const answerKey in questionElement.answers) {\n                    let answerElement = questionElement.answers[answerKey]\n                    let newAnswer = {\n                        id: \"answer_\" + index3 + \"_\" + v4(),\n                        name: \"answer_\" + index3 + \"_\" + v4(),\n                        id_feild: \"answer_\" + index3 + \"_\" + v4(),\n                        label: \"Варіант відповіді \" + index3,\n                        value: answerElement.name_of_answer,\n                        parentid: newQuestion.id,\n                        list_of_answers_id: answerElement.list_of_answers_id,\n                        question_id: answerElement.question_id\n                    }\n                    if (newQuestion.id === newAnswer.parentid) {\n                        answer.push(newAnswer)\n                    }\n                    index3++\n                }\n                index2++\n            }\n            index++\n            section.push(newSection);\n        }\n        addAnketaState(newAnketa)\n    } \n\n    const addAnketaState = (newData) => {\n        let dataToAdd = [...anketa];\n        dataToAdd.push(newData);\n        setAnketa(dataToAdd);\n    }\n    \n    // const updateAnketa = (data) => {\n    //     let updatedAnketa= [...anketa];\n    //     const index = updatedAnketa.findIndex(obj => obj.id === data.id)\n    //     updatedAnketa[index] = data\n    //     setAnketa(updatedAnketa)\n    // }\n    \n    const addSection = (parentId, index) => {\n        let newData = {\n            id: \"name_of_section_\" + index + \"_\" + v4(),\n            name: \"name_of_section_\" + index + \"_\" + v4(),\n            id_feild: \"name_of_section_\" + index + \"_\" + v4(),\n            label: \"Блок \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...section];\n        dataToAdd.push(newData);\n        setSection(dataToAdd);\n    }\n\n    const deleteSection = (id) => {\n        let newSection = section.filter(section => section.id !== id )\n        let deleteSection = section.filter(section => section.id === id )\n\n        if (deleteSection[0].section_id) {\n            deleteIteam.section.push(deleteSection[0].section_id)\n        }\n\n        let newQuestion = question.filter(question => question.parentid !== id)\n        let deleteQuestion = question.filter(question => question.parentid === id)\n        deleteQuestion.forEach(v => {\n            if (v.question_id) {\n                deleteIteam.question.push(v.question_id)\n            }\n        })\n        \n\n        deleteQuestion.forEach((v, k) => {\n            let newAnswer = answer.filter(answer => answer.parentid !== v.id)\n            let deleteAnswer = answer.filter(answer => answer.parentid === v.id)\n            deleteAnswer.forEach(v => {\n                if (v.list_of_answers_id) {\n                    deleteIteam.list_of_answers.push(v.list_of_answers_id)\n                    deleteIteam.children_answer.push(v.list_of_answers_id)\n                }\n            })\n            setAnswer(newAnswer)\n        })\n\n        setQuestion(newQuestion)\n        setSection(newSection)\n    }\n\n    const addQuestion = (parentId, index) => {\n        let newData = {\n            id: \"question_\" + index + \"_\" + v4(),\n            name: \"question_\" + index + \"_\" + v4(),\n            id_feild: \"question_\" + index + \"_\" + v4(),\n            label: \"Запитання \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...question];\n        dataToAdd.push(newData);\n        setQuestion(dataToAdd);\n    }\n\n    const deleteQuestion = (id) => {\n        let newQuestion = question.filter(question => question.id !== id)\n        let delteQuestion = question.filter(question => question.id === id)\n        \n        if (delteQuestion[0].question_id) {\n            deleteIteam.question.push(delteQuestion[0].question_id)\n        }\n\n        let newAnswer = answer.filter(answer => answer.parentid !== id)\n        let deleteAnswer = answer.filter(answer => answer.parentid === id)\n        deleteAnswer.forEach(v => {\n            if (v.list_of_answers_id) {\n                deleteIteam.list_of_answers.push(v.list_of_answers_id)\n            }\n        })\n        \n        setAnswer(newAnswer)\n        setQuestion(newQuestion)\n    }\n\n    const addAnswer = (parentId, index) => {\n        let newData = {\n            id: \"answer_\" + index + \"_\" + v4(),\n            name: \"answer_\" + index + \"_\" + v4(),\n            id_feild: \"answer_\" + index + \"_\" + v4(),\n            label: \"Варіант відповіді  \" + index,\n            parentid: parentId\n        }\n        let dataToAdd = [...answer];\n        dataToAdd.push(newData);\n        setAnswer(dataToAdd);\n    }\n\n    const deleteAnswer = (id) => {\n        let newAnswer = answer.filter(answer => answer.id !== id)\n        let deleteAnswer = answer.filter(answer => answer.id === id)\n        \n        if (deleteAnswer[0].list_of_answers_id) {\n            deleteIteam.list_of_answers.push(deleteAnswer[0].list_of_answers_id)\n        }\n        setAnswer(newAnswer)\n    }\n\n    if (error) {\n        return (\n            <Alert severity=\"error\">\n                {error}\n                <Button \n                    variant='contained' \n                    color='warning'\n                    style={{marginLeft: '50px'}}\n                    onClick={() => {\n                        history.push({ \n                            pathname: '/ankety',\n                            state: data\n                           })\n                    }}\n                >Головна сторінка</Button>\n            </Alert>\n        )\n    }\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else {\n        \n        return (\n            <div>\n                <Typography component=\"h1\" variant=\"h5\" style={{\n                display: 'block', \n                textAlign: 'center',\n                marginTop: 50\n                }}\n                >\n                    Редагувати анкету {data.name_of_anketa}\n                </Typography>\n                \n                <Tree\n                    data={data}\n                    history={history}\n                    handleSubmit={handleSubmit}\n                    anketa={anketa}\n                    section={section}\n                    question={question}\n                    answer={answer}\n                    addSection={addSection}\n                    deleteSection={deleteSection}\n                    addQuestion={addQuestion}\n                    deleteQuestion={deleteQuestion}\n                    addAnswer={addAnswer}\n                    deleteAnswer={deleteAnswer}\n\n                />\n            </div>\n        )\n    }\n}\n\nexport default EditAnketa","import React, {useState, useEffect} from 'react';\nimport RightMenuStats from '../../Components/menu/RightMenuStats'\nimport TextField from '@mui/material/TextField'\nimport { Redirect } from \"react-router-dom\"\n\nimport Box from '@mui/material/Box'\nimport { v4 } from 'uuid'\nimport {\n    Radio,\n    Button,\n    Typography,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    Autocomplete,\n    FormControlLabel,\n    CircularProgress\n} from '@mui/material'\nimport { \n    Grid,\n    Card,\n    Container \n} from \"@material-ui/core\";\n\nimport Avatar from '@mui/material/Avatar';\n\nimport { \n    getAnaketa, \n    getAnakety, \n    getStatistic,\n    getAllChildrenByAnketa,\n    getAllChildrenByAnketaAndParent\n  } from '../../api/client';\n\nimport TreeView from '@mui/lab/TreeView';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport TreeItem from '@mui/lab/TreeItem';\n  \nconst Statistics = (props) => {\n  const data = (props.location && props.location.state) || {};\n  const [open, setOpen] = useState(false)\n  const [anketa, setAnketa] = useState()\n  const [ankety, setAnkety] = useState()\n  const [anketaCompare, setAnketaCompare] = useState()\n  const [child, setChild] = useState()\n  const [children, setChildren] = useState([])\n  const [parent, setParent] = useState()\n  const [parents, setParents] = useState([])\n  const [useCount] = useState(0)\n  const [isAuthorized, setIsAuthorized] = useState(false)\n  const [isLoading, setLoading] = useState(true)\n  const [error, setError] = useState({\n    anketa: false,\n    child: false\n  })  \n  const [statistic, setStatistic] = useState([])\n\n  useEffect(() => {\n    const fetchOffsetAnketa = (token) => {\n      getAnakety(token)\n        .then(res => res.json())\n        .then(ankety => {\n          ankety.forEach( obj => renameKey( obj, 'name_of_anketa', 'label' ))\n          setAnkety(ankety)\n          setIsAuthorized(true);   \n          setLoading(false); \n        }).catch(err => {\n            setIsAuthorized(false);\n            setLoading(false); \n            return err;\n        })\n    }\n    fetchOffsetAnketa(data.token) \n  }, [useCount])\n\n  const handleChangeAnketa = (e, value) => {\n    setAnketa(value)\n    if (value) {\n      getAllChildrenByAnketa(value.anketa_id, data.token)\n        .then(res => res.json())\n        .then(children => {\n          children.forEach( obj => concatKey( obj, 'surname', 'name' ))\n          setChildren(children)\n        })\n\n      getAllChildrenByAnketa(value.anketa_id, data.token)\n        .then(res => res.json())\n        .then(data => {\n          let filterData = removeDuplicates(data, item => item.parents_id)\n\n          filterData.forEach( obj => deleteKey( obj, 'birthday'))\n          filterData.forEach( obj => deleteKey( obj, 'children_id'))\n          filterData.forEach( obj => deleteKey( obj, 'height'))\n          filterData.forEach( obj => deleteKey( obj, 'weight'))\n          filterData.forEach( obj => deleteKey( obj, 'label'))\n          filterData.forEach( obj => deleteKey( obj, 'name'))\n          filterData.forEach( obj => deleteKey( obj, 'surname'))\n          filterData.forEach( obj => concatKey( obj, 'last_name', 'first_name' ))\n\n          setParents(filterData)\n        })\n      const request = {\n        anketa_id: value.anketa_id,\n        token: data.token\n      }\n      getAnaketa(request)\n        .then(res => res.json())\n        .then(res => {\n          setAnketaCompare(res)\n        })\n    } else {\n      setChildren([])\n      setParents([])\n    }\n  };\n\nconst removeDuplicates = (data, key) => {\n  return [ ...new Map(data.map(item => [key(item), item])).values()]\n};\n\n  const handleChangeChild = (e, value) => {\n    setChild(value)\n  };\n\n  const handleChangeParents = (e, value) => {\n    setParent(value)\n    if (value && anketa) {\n      getAllChildrenByAnketaAndParent(anketa.anketa_id, value.parents_id, data.token)\n        .then(res => res.json())\n        .then(children => {\n          children.forEach( obj => concatKey( obj, 'surname', 'name' ))\n          setChildren(children)\n        })\n    } else if (anketa) {\n      getAllChildrenByAnketa(anketa.anketa_id, data.token)\n        .then(res => res.json())\n        .then(children => {\n          children.forEach( obj => concatKey( obj, 'surname', 'name' ))\n          setChildren(children)\n        })\n    } \n  }\n  \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputChange = (name, value) => {\n    setError((prevState) => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const checkFields = (fields) => {\n    for (const val in fields) {\n      if (!fields[val]) {\n        handleInputChange(val, true)\n        return false;\n      } else {\n        handleInputChange(val, false)\n      }\n    }\n    return true;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const fields = {\n      anketa: anketa,\n      child: child\n    }\n\n    if (checkFields(fields)) {\n      const request = {\n        anketa_id: anketa.anketa_id,\n        children_id: child.children_id,\n        token: data.token\n      }\n\n      getStatistic(request)\n        .then(res => res.json())\n        .then(res => {\n          console.log(res)\n          convertJson(res)\n        })\n    } \n  }\n\n  const renameKey = ( obj, oldKey, newKey ) => {\n    obj[newKey] = obj[oldKey]\n    delete obj[oldKey]\n  }\n\n  const concatKey = ( obj, fisrt, second ) => {\n    obj['label'] = obj[fisrt] + \" \" + obj[second]\n    delete obj[fisrt];\n    delete obj[second];\n  }\n\n  const deleteKey = (obj, key) => {\n    delete obj[key]\n  }\n\n  const convertJson = (array) => {\n\n    let data = {\n      anketa_id: array[0].anketa_id,\n      name_of_anketa: array[0].name_of_anketa,\n      child_first_name: array[0].name,\n      child_last_name: array[0].surname,\n      parent_first_name: array[0].first_name,\n      parent_last_name: array[0].last_name,\n      parent_phone: array[0].phone,\n      answers: []\n    }\n\n    for (const key in array) {\n      let element = array[key]\n      let grouped_answer_by_date = {\n        date: element.date,\n        sections: []\n      } \n\n      let index = data.answers.find(x => x.date === element.date)\n      if (!index) {\n        // console.log(\"block\")\n        for (const key_1 in array) {\n          let element_1 = array[key_1]\n          \n          let section = {\n            section_id: element_1.section_id,\n            name_of_section: element_1.name_of_section,\n            questions: []\n          }\n          \n          let index_1 = grouped_answer_by_date.sections.find(x => x.section_id === element_1.section_id)\n          \n          if (grouped_answer_by_date.date === element_1.date && !index_1) {\n            for (const key_2 in array) {\n              let element_2 = array[key_2]\n              let question = {\n                question_id: element_2.question_id,\n                question: element_2.question,\n                parent_id: element_2.section_id,\n                answers: [\n                  {\n                    list_of_answers_id: element_2.list_of_answers_id,\n                    name_of_answer: element_2.name_of_answer,\n                    parent_id: element_2.question_id\n                  }\n                ]\n              }\n              let index_2 = section.questions.find(x => x.question_id === element_2.question_id)\n              if (question.parent_id === section.section_id && grouped_answer_by_date.date === element_2.date && !index_2) {\n                // console.log(element_2)\n                section.questions.push(question)\n              }\n            }\n\n            let section_index = anketaCompare.sections.findIndex(x => x.section_id === section.section_id)\n            let diffQuestion = anketaCompare.sections[section_index].questions\n              .filter(({ question_id: id1 }) => !section.questions.some(({ question_id: id2 }) => id2 === id1))\n              .map(x => {\n                // x.questions.map(y => {\n                  x.answers = [{name_of_answer: \"Відповідь не дано\"}]\n                // })\n                return x\n              })\n\n            for (const key in diffQuestion) {\n              section.questions.push(diffQuestion[key])\n            }\n            \n            grouped_answer_by_date.sections.push(section)\n          }\n        }\n        let diffSection = anketaCompare.sections\n          .filter(({ section_id: id1 }) => !grouped_answer_by_date.sections.some(({ section_id: id2 }) => id2 === id1))\n          .map(x => {\n            x.questions.map(y => {\n              y.answers = [{name_of_answer: \"Відповідь не дано\"}]\n            })\n            return x\n          })\n\n        for (const key in diffSection) {\n          grouped_answer_by_date.sections.push(diffSection[key])\n        }\n\n        data.answers.push(grouped_answer_by_date)\n        \n      }\n    }\n\n    for (const key in data.answers) {\n      let element = data.answers[key]\n      for (const keyS in element.sections) {\n        let  count = {}\n        let elementS = element.sections[keyS]\n        for (const keyQ in elementS.questions) {\n          let elementQ = elementS.questions[keyQ]\n          const flag = elementQ.answers[0].name_of_answer\n          count[flag] = elementS.questions.filter(x => x.answers[0].name_of_answer === flag).length\n        }\n        elementS.counts = count\n      }\n    }\n    // console.log('data')\n    // console.log(data)\n    setStatistic(data)\n  }\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 7) - hash);\n    }\n  \n    let color = '#';\n  \n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.substr(-2);\n    }\n  \n    return color;\n  }\n\n  if (isLoading) {\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            style={{ minHeight: \"100vh\" }}\n        >\n          <CircularProgress />\n        </Grid>\n    )\n  }\nif (!isAuthorized) {\n    return <Redirect to=\"/signin\"></Redirect>\n} else {\n    return (\n      <div> \n          <RightMenuStats\n              open={open}\n              handleDrawerOpen={handleDrawerOpen}\n              handleDrawerClose={handleDrawerClose}\n              parents={data}\n              // anketa={}\n            />\n          <Box component=\"form\" onSubmit={handleSubmit} id=\"anketa\" noValidate> \n              <Container>  \n              <Card>\n                  <Grid container spacing={3} key={v4()} direction=\"row\" alignItems=\"center\"> \n                      <Grid item key={v4()} md={2} lg={2}/>\n                      <Grid item key={v4()} md={4} lg={4}> \n                        <Autocomplete\n                          value={anketa}\n                          disablePortal\n                          id=\"combo-box-demo\"\n                          options={ankety}\n                          sx={{ marginTop: '40px' }}\n                          onChange={handleChangeAnketa}\n                          renderInput={(params) => \n                            <TextField \n                              {...params} \n                              label=\"Виберіть анкету\" \n                              helperText=\"Спершу виберіть анкету\"\n                              required\n                              error={error.anketa}\n                            />\n                          }\n                        />\n                      </Grid>\n                      <Grid item key={v4()} md={4} lg={4}> \n                        <Autocomplete\n                          value={parent}\n                          disablePortal\n                          id=\"combo-box-demo\"\n                          options={parents}\n                          sx={{ marginTop: '20px' }}\n                          onChange={handleChangeParents}\n                          renderInput={(params) => <TextField {...params} label=\"Виберіть батьків\" />}\n                        />\n                      </Grid>\n\n                      <Grid item key={v4()} md={2} lg={2}/>\n                      \n                      <Grid item key={v4()} md={2} lg={2}/>\n                      <Grid item key={v4()} md={4} lg={4}> \n                        <Autocomplete\n                          value={child}\n                          disablePortal\n                          id=\"combo-box-demo\"\n                          options={children}\n                          sx={{ marginBottom: '20px' }}\n                          onChange={handleChangeChild}\n                          renderInput={(params) => \n                            <TextField \n                              {...params} \n                              required \n                              label=\"Виберіть дитину\"\n                              error={error.child}\n                            />\n                          }\n                        />\n                      </Grid>\n                      <Grid item key={v4()} md={4} lg={4} style={{textAlign: 'center'}}>\n                              <Button \n                                  variant=\"contained\"\n                                  type=\"submit\"\n                                  size='large'\n                                  fullWidth\n                                  sx={{ marginBottom: '20px' }}\n                              >\n                                  Статистика\n                              </Button>\n                      </Grid>\n                      </Grid>\n                  </Card>\n              </Container>\n              {Array.isArray(statistic.answers) && statistic.answers.length ? \n              <div>\n                {\n                  statistic.answers.map(answers => {\n                    // console.log('answers')\n                    // console.log(answers)\n                    return (\n                      <div \n                        key={v4()}\n                        style={{\n                          margin: 'auto',\n                          maxWidth: '70%',\n                          marginTop: '10px'\n                        }}\n                      >\n                        <TreeView\n                          key={v4()}\n                          disabledItemsFocusable={true}\n                          disableSelection={true}\n                          onNodeFocus={() => {}}\n                          defaultCollapseIcon={<ExpandMoreIcon size='large'/>}\n                          defaultExpandIcon={<ChevronRightIcon size='large'/>}\n                      >\n                        <TreeItem nodeId={v4()} label={\n                          <Card>\n                            <Grid item key={v4()} md={12} lg={12} xs={12} style={{backgroundColor: '#1976d2'}}>\n                              <div style={{\n                                color: 'rgb(255 255 255)',\n                                paddingTop: '10px',\n                                paddingBottom: '10px',\n                                paddingLeft: '10px',\n                                fontSize: '25px',\n                              }}>\n                                {answers.date}\n                              </div>\n                            </Grid>\n                          </Card>\n                          }\n                        > \n                        <Container style={{marginTop: '20px', marginBottom: '30px'}}> \n                        <Grid container spacing={3} key={v4()} direction=\"row\" alignItems=\"center\"> \n                          <Grid item key={v4()} md={12} lg={12} xs={12}> \n                            {\n                              answers.sections.map(section => {\n                                let questionCount = 0\n                                return (\n                                  <Grid item key={v4()} md={12} lg={12} xs={12} style={{marginBottom: '20px'}}>\n                                    <Card>\n                                      <Grid item key={v4()} md={12} lg={12} xs={12} style={{backgroundColor: '#e0e0e0'}}>\n                                        <div style={{\n                                          color: 'rgb(145 143 143)',\n                                          paddingTop: '10px',\n                                          paddingBottom: '10px',\n                                          paddingLeft: '10px',\n                                          fontSize: '25px'\n                                        }}>\n                                          {section.name_of_section}\n                                        </div>\n                                      </Grid>\n                                      <Grid item key={v4()} md={12} lg={12} xs={12} \n                                        style={{\n                                          backgroundColor: '#e0e0e0',\n                                          paddingBottom: '10px',\n                                          paddingLeft: '10px'\n                                        }} \n                                      >\n                                      {\n                                        Object.keys(section.counts).map(count => {\n                                          return (\n                                            <div key={v4()} style={{display: 'inline-flex'}}>\n                                              <Avatar \n                                                key={v4()}\n                                                sx={{ \n                                                  bgcolor: stringToColor(count),\n                                                  marginTop: '7px'\n                                                }} \n                                              >\n                                                {section.counts[count]}\n                                              </Avatar>\n                                              <p \n                                                key={v4()}\n                                                style={{\n                                                  marginLeft: '6px',\n                                                  marginRight: '10px',\n                                                  fontSize: '18px',\n                                                  color: 'rgb(145 143 143)'\n                                                }}\n                                              >{count}</p>\n                                            </div>\n                                          )\n                                        })\n                                      }\n                                      </Grid>\n                                      {\n                                        section.questions.map(question => {\n                                          questionCount++\n                                          return (\n                                            <Grid container spacing={3} key={v4()}>\n                                              <Grid item key={v4()} md={12} lg={12} xs={12}>\n                                                <Card>\n                                                  <FormControl component=\"fieldset\">\n                                                      <FormLabel component=\"legend\">\n                                                          <Typography variant=\"h6\" gutterBottom component=\"div\" color='inherit' style={{marginLeft: '10px'}}>\n                                                              {questionCount}. {question.question}\n                                                          </Typography>\n                                                      </FormLabel>\n                                                      <RadioGroup\n                                                        aria-label=\"gender\"\n                                                        name=\"radio-buttons-group\"\n                                                      >\n                                                        {\n                                                          question.answers.map(answer => {\n                                                            return (\n                                                              <FormControlLabel \n                                                                key={v4()} \n                                                                value={answer.name_of_answer} \n                                                                control={<Radio />} \n                                                                label={answer.name_of_answer} \n                                                                style={{marginLeft: '20px'}}\n                                                                disabled\n                                                                checked\n                                                              />\n                                                            )\n                                                          })\n                                                        }\n                                                    </RadioGroup>\n                                                  </FormControl>\n                                                </Card>\n                                              </Grid>\n                                            </Grid>\n                                          )\n                                        })\n                                      }\n                                    </Card>\n                                  </Grid>\n                                )\n                              })\n                            }\n                          </Grid>\n                        </Grid>\n                      </Container>\n                        </TreeItem>\n                      </TreeView>\n                      <div style={{width: '100px'}}>\n\n                      </div>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              : ''\n              }\n          </Box>\n      </div>\n    )\n  }\n}\n\nexport default Statistics;\n","import React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"@material-table/core\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Alert from '@mui/material/Alert';\nimport { useHistory } from \"react-router-dom\";\n\n \nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n \nconst Children = ({\n  columns, \n  parents,\n  data, \n  handleRowDelete, \n  handleRowAdd, \n  handleRowUpdate, \n//   selectedAnketa,\n  iserror, \n  errorMessages\n}) => {\n  const history = useHistory();\n \n  return (\n    <div>\n            {iserror && \n              <Alert severity=\"error\">\n                  {errorMessages.map((msg, i) => {\n                      return <div key={i}>{msg}</div>\n                  })}\n              </Alert>\n            }       \n            <MaterialTable mt={90}\n              title=\"Діти\"\n              columns={columns}\n              data={data}\n              icons={tableIcons}\n              options={{\n                search: false,\n                pageSize:6,       // make initial page size\n                emptyRowsWhenPaging: true,   //to make page size fix in case of less data rows\n                pageSizeOptions:[6,12],    // rows selection options\n                actionsColumnIndex: -1\n                }}\n              \n              editable={{\n                onRowUpdate: async (newData, oldData) => {\n                  await handleRowUpdate(newData, oldData)\n                },\n                onRowAdd: async (newData) => {\n                  await handleRowAdd(newData)\n                },\n                onRowDelete: async (oldData) => {\n                  await handleRowDelete(oldData)\n                }\n              }}\n              localization={{\n                header: {\n                    actions: ''\n                },\n                body: {\n                    emptyDataSourceMessage: 'Додайте вашу дитину',\n                    editRow: {\n                      deleteText: 'Ви дійсно бажаєте видалити дані?'\n                    }\n                }\n            }}\n            />\n    </div>\n  );\n}\n \nexport default Children;","import React, {useState, useEffect} from 'react';\nimport ChildrenTable from '../../Components/table/Children';\nimport RightMenuStats from '../../Components/menu/RightMenuStats'\n\n\nimport { \n    getChildren,\n    deleteChildren, \n    addChildren, \n    editChildren\n} from '../../api/client';\n\nimport { Redirect } from \"react-router-dom\"\n\nimport {\n  CircularProgress\n} from '@mui/material'\n\nimport { \n    Grid,\n} from \"@material-ui/core\";\n\nconst columns = [\n    {title: \"id\", field: \"id\", hidden: true},\n    {title: \"Прізвище\", field: \"surname\"},\n    {title: \"Ім'я\", field: \"name\"},\n    {title: \"Дата народження\", field: \"birthday\", type: \"date\", format: \"YYYY-dd-mm\"},\n    {title: \"Вага\", field: \"weight\", type: \"numeric\"},\n    {title: \"Зріст\", field: \"height\", type: \"numeric\"}\n]\n\nconst Children = (props) => {\n    let data = (props.location && props.location.state) || {};\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n    const [children, setChildren] = useState([])\n    const [useCount] = useState(0);\n    const [open, setOpen] = useState(false)\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n          getChildren(data.parents_id, data.token)\n            .then(data => data.json())\n            .then((data) => {\n              let preperadData = []\n  \n              data.forEach((key, val) => {\n                var parts = key.birthday.split('/');\n                var dateString = parts[2] + '-' + parts[1] + '-' + parts[0] \n                key.birthday = new Date(dateString); \n                preperadData.push(key)\n              })\n              setChildren(preperadData)\n              setIsAuthorized(true);   \n              setLoading(false); \n        }).catch(err => {\n          setIsAuthorized(false);\n          setLoading(false); \n          return err;\n      })\n      }, [useCount])\n\n    const validate = (data) => {\n        let errorList = []\n        if(data.surname === undefined || data.surname === ''){\n          errorList.push(\"Будь ласка ведіть ім'я\")\n        }\n        if(data.name === undefined || data.name === ''){\n          errorList.push(\"Будь ласка ведіть прізвище\")\n        }\n        if(data.birthday === undefined || data.birthday === ''){\n          errorList.push(\"Будь ласка ведіть дату народження\")\n        }\n        if(data.weight === undefined || data.weight === ''){\n          errorList.push(\"Будь ласка ведіть вагу\")\n        }\n        if(data.height === undefined || data.height === ''){\n          errorList.push(\"Будь ласка ведіть зріст\")\n        }\n        return errorList\n      }\n\n    const handleRowDelete = async (oldData) => {\n        deleteChildren(oldData.id, data.token)\n          .then(res => {\n            let newChildren = children.filter(children => children.id !== oldData.id )\n            setChildren(newChildren)\n            setErrorMessages([])\n            setIserror()\n          })\n          .catch(err => {\n            setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n            setIserror(true)\n          })\n    }\n\n    const handleRowAdd = async (newData) => {\n        //validation\n        let errorList = validate(newData)\n        if (errorList.length > 0) {\n          setErrorMessages(errorList)\n          setIserror(true)\n          throw Error\n        } else { //no error\n          addChildren(newData, data.token, data.parents_id)\n          .then(res => res.json())\n          .then(res => {\n            newData.id = res[0].insertId\n            let dataToAdd = [...children];\n            dataToAdd.push(newData);\n            setChildren(dataToAdd);\n            setErrorMessages([])\n            setIserror(false)\n          })\n          .catch(() => {\n            setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n            setIserror(true)\n          })\n        }\n    }\n\n    const handleRowUpdate = async (newData, oldData) => {\n        //validation\n        if (typeof(newData.birthday) === 'string' ) {\n          newData.birthday = new Date(newData.birthday); \n        }\n    \n        let errorList = validate(newData)\n      \n        if (errorList.length > 0) {\n          setErrorMessages(errorList)\n          setIserror(true)\n          throw Error\n        } else { //no error\n          editChildren(newData, data.token)\n          .then(() => {\n            let updatedChildrend = [...children];\n            const index = updatedChildrend.findIndex(obj => obj.id === oldData.id)\n            updatedChildrend[index] = newData\n            setChildren(updatedChildrend)\n            setIserror(false)\n            setErrorMessages([])\n          })\n          .catch(err => {\n            setErrorMessages([\"Update failed! Server error\"])\n            setIserror(true)\n          })\n        } \n    }\n\n    if (isLoading) {\n      return (\n          <Grid\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              direction=\"column\"\n              style={{ minHeight: \"100vh\" }}\n          >\n            <CircularProgress />\n          </Grid>\n      )\n    }\n  if (!isAuthorized) {\n      return <Redirect to=\"/signin\"></Redirect>\n  } else {\n    return (\n      <div>\n          <RightMenuStats\n              open={open}\n              handleDrawerOpen={handleDrawerOpen}\n              handleDrawerClose={handleDrawerClose}\n              parents={data}\n          />\n          <ChildrenTable \n              columns={columns} \n              parents={data}\n              data={children} \n              handleRowDelete={handleRowDelete} \n              handleRowAdd={handleRowAdd}\n              handleRowUpdate={handleRowUpdate}\n              iserror={iserror} \n              errorMessages={errorMessages}\n          />\n      </div>\n  )\n  }\n}\n\nexport default Children","import React, {useState, useEffect} from 'react';\nimport RightMenuStats from '../../Components/menu/RightMenuStats'\n\nimport Box from '@mui/material/Box'\nimport { v4 } from 'uuid'\nimport { Redirect } from \"react-router-dom\"\nimport {\n    Alert,\n    Button,\n    Snackbar,\n    TextField,\n    CircularProgress\n} from '@mui/material'\nimport { \n    Grid,\n    Card,\n    Container \n} from \"@material-ui/core\";\n\nimport {\n    getUserByUsername,\n    isExistsUser,\n    editUser,\n    editPassword\n} from '../../api/client'\n\n\n\nconst Profile = (props) => {\n    let data = (props.location && props.location.state) || {};\n\n    const [open, setOpen] = useState(false)\n    const [useCount] = useState(0)\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [user, setUser] = useState()\n    const [openNotifyS, setOpenNotifyS] = useState(false)\n    const [alert, setAlert] = useState({\n        severity: '',\n        message: ''\n    })\n    const [password, setPassword] = useState({\n        new: '',\n        confirm: ''\n    })\n\n    const handleCloseS = () => {\n        setOpenNotifyS(false)\n    };\n\n    const handleOpenS = (sevevity, message) => {\n        setOpenNotifyS(true)\n        setAlert({severity: sevevity, message: message})\n    };\n\n    const [state, setState] = useState({\n        isFirstName: false,\n        isLastName: false,\n        isUsername: false,\n        isPhone: false,\n        isAlert: false,\n        phoneComment: \"\"\n      });\n    const [isNewPass, setIsNewPass] = useState(false)\n    const [isConfirmPass, setIsConfirmPass] = useState(false)\n    useEffect(() => {\n        const request = {\n            username: data.username,\n            token: data.token\n        }\n        getUserByUsername(request)\n            .then(res => res.json())\n            .then(res => {\n                setUser(res)\n                setIsAuthorized(true)\n                setLoading(false)\n            }).catch(err => {\n                setIsAuthorized(false);\n                setLoading(false); \n                return err;\n            })\n    }, [useCount])\n\n    const setFisrtName = (value) => {\n        let newState = user\n        newState.first_name = value.target.value\n        setUser(newState)\n    }\n    const setLastName = (value) => {\n        let newState = user\n        newState.last_name = value.target.value\n        setUser(newState)\n    }\n    const setUsername = (value) => {\n        let newState = user\n        newState.username = value.target.value\n        setUser(newState)\n    }\n    const setPhone = (value) => {\n        let newState = user\n        newState.phone = value.target.value\n        setUser(newState)\n    }\n\n    const setNewPass = (value) => {\n        let newState = password\n        newState.new = value.target.value\n        setPassword(newState)\n    }\n\n    const setConfirmPass = (value) => {\n        let newState = password\n        newState.confirm = value.target.value\n        setPassword(newState)\n    }\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const handleInputChange = (name, value) => {\n        setState((prevState) => ({\n          ...prevState,\n          [name]: value\n        }));\n    };\n\n    const checkFields = (user) => {\n        if(user.isPhone) {\n            if (user.isPhone.length < 13 || user.isPhone.length > 13 || user.isPhone.substring(1,13).match(/^[0-9]+$/) === null) {\n                setState({phoneComment: \"Неправильний номер\", isPhone: true})\n              } else {\n                setState({phoneComment: \"\", isPhone: false})\n              }\n        }\n        for (const val in user) {\n          if (val !== 'isPhone') {\n            if (!user[val]) {\n                handleInputChange(val, true)\n                return false;\n              } else {\n                handleInputChange(val, false)\n              }\n          }\n        }\n        return true;\n      }\n\n\n    const handleSubmitPass = (event) => {\n        event.preventDefault()\n\n        if (!password.new) {\n            setIsNewPass(true)\n        } else {\n            setIsNewPass(false)\n        }\n\n        if (!password.confirm) {\n            setIsConfirmPass(true)\n        } else {\n            setIsConfirmPass(false)\n        }\n        const request = {\n            password: password.new,\n            parents_id: user.parents_id,\n            token: user.token\n        }\n            \n        if (password.new !== password.confirm) {\n            handleOpenS('error', 'Пароль не співпадає')\n            setIsConfirmPass(true)\n        } else {\n            setIsConfirmPass(false)\n            editPassword(request)\n            handleOpenS('success', 'Пароль оновлено успішно')\n        }\n        \n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const request = {\n            parents_id: user.parents_id,\n            username: user.username,\n            token: data.token\n        }\n\n        const checkUser = {\n            isFirstName : user.first_name,\n            isLastName  : user.last_name,\n            isUsername  : user.username,\n            isPhone     : user.phone\n        }\n\n        const updateUser = {\n            user: user,\n            token: data.token\n        }\n\n        if (checkFields(checkUser)) {\n            isExistsUser(request)\n                .then(res => res.json())\n                .then(res => {\n                    let newState = state\n                    if (!res.exist) {\n                        editUser(updateUser)\n                        handleOpenS('success', 'Дані успішно оновлено')\n                        newState.isUsername = false\n                    } else {\n                        handleOpenS('error', `Користував з логіном '${user.username}' вже зареєстрований`)\n                        newState.isUsername = true\n                    }\n\n                    setState(newState)\n                    \n                })\n        }\n      }\n\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else { \n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'}}\n                    open={openNotifyS}\n                    onClose={handleCloseS}\n                    autoHideDuration={6000}\n                    key={v4()}\n                > \n                    <Alert onClose={handleCloseS} severity={alert.severity} sx={{ width: '100%' }}>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n                <RightMenuStats\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    handleDrawerClose={handleDrawerClose}\n                    parents={data}\n                />\n                <Box component=\"form\" onSubmit={handleSubmit} id=\"profile\" noValidate> \n                    <Container> \n                        <Card> \n                            <Grid container spacing={3} key={v4()} direction=\"row\" alignItems=\"center\"> \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={4} lg={4}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"first_name\"\n                                        label=\"Ім'я\"\n                                        name=\"first_name\"\n                                        autoComplete=\"off\"\n                                        defaultValue={user.first_name}\n                                        onChange={setFisrtName}\n                                        error={state.isFirstName}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={4} lg={4}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"last_name\"\n                                        label=\"Прізвище\"\n                                        name=\"last_name\"\n                                        autoComplete=\"off\"\n                                        defaultValue={user.last_name}\n                                        onChange={setLastName}\n                                        error={state.isLastName}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={2} lg={2}/>\n    \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"username\"\n                                        label=\"Логін\"\n                                        name=\"username\"\n                                        autoComplete=\"off\"\n                                        defaultValue={user.username}\n                                        onChange={setUsername}\n                                        error={state.isUsername}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={2} lg={2}/>\n    \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"phone\"\n                                        label=\"Мобільний номер\"\n                                        name=\"phone\"\n                                        autoComplete=\"off\"\n                                        defaultValue={user.phone}\n                                        onChange={setPhone}\n                                        error={state.isPhone}\n                                        helperText={state.phoneComment}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={2} lg={2}/>\n    \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <Button\n                                        fullWidth\n                                        size='large'\n                                        type=\"submit\"\n                                        color='primary'\n                                        style={{\n                                            backgroundColor: '#1976d2', \n                                            color: '#ffffff',\n                                            marginBottom: '20px'\n                                        }}\n                                    >\n                                        Зберегти\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    </Container>\n                </Box>\n    \n                <Box component=\"form\" onSubmit={handleSubmitPass} id=\"password\" noValidate style={{marginTop: '20px'}}> \n                    <Container> \n                        <Card> \n                            <Grid container spacing={3} key={v4()} direction=\"row\" alignItems=\"center\"> \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"newPass\"\n                                        label=\"Новий пароль\"\n                                        name=\"newPass\"\n                                        type=\"password\"\n                                        autoComplete=\"off\"\n                                        defaultValue={password.new}\n                                        onChange={setNewPass}\n                                        error={isNewPass}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={2} lg={2}/>\n    \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <TextField\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        id=\"confirmPass\"\n                                        label=\"Підтвердіть пароль\"\n                                        name=\"confirmPass\"\n                                        type=\"password\"\n                                        autoComplete=\"off\"\n                                        defaultValue={password.confirm}\n                                        onChange={setConfirmPass}\n                                        error={isConfirmPass}\n                                    />\n                                </Grid>\n                                <Grid item key={v4()} md={2} lg={2}/>\n    \n                                <Grid item key={v4()} md={2} lg={2}/>\n                                <Grid item key={v4()} md={8} lg={8}> \n                                    <Button\n                                        fullWidth\n                                        size='large'\n                                        type=\"submit\"\n                                        color='primary'\n                                        style={{\n                                            backgroundColor: '#1976d2', \n                                            color: '#ffffff',\n                                            marginBottom: '20px'\n                                        }}\n                                    >\n                                        Зберегти\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    </Container>\n                </Box>\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable from \"@material-table/core\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Alert from '@mui/material/Alert';\n\n \nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n \nconst AdminTable = ({\n  columns, \n  data, \n  handleRowDelete, \n  handleRowAdd, \n  handleRowUpdate, \n  iserror, \n  errorMessages\n}) => {\n \n  return (\n    <div>\n            {iserror && \n              <Alert severity=\"error\">\n                  {errorMessages.map((msg, i) => {\n                      return <div key={i}>{msg}</div>\n                  })}\n              </Alert>\n            }       \n            <MaterialTable mt={90}\n              title=\"Адміни\"\n              columns={columns}\n              data={data}\n              icons={tableIcons}\n              options={{\n                search: false,\n                pageSize:6,       // make initial page size\n                emptyRowsWhenPaging: true,   //to make page size fix in case of less data rows\n                pageSizeOptions:[6,12],    // rows selection options\n                actionsColumnIndex: -1\n                }}\n              \n              editable={{\n                onRowUpdate: async (newData, oldData) => {\n                  await handleRowUpdate(newData, oldData)\n                },\n                onRowAdd: async (newData) => {\n                  await handleRowAdd(newData)\n                },\n                onRowDelete: async (oldData) => {\n                  await handleRowDelete(oldData)\n                }\n              }}\n              localization={{\n                header: {\n                    actions: ''\n                },\n                body: {\n                    emptyDataSourceMessage: 'Додайте адміна',\n                    editRow: {\n                      deleteText: 'Ви дійсно бажаєте видалити дані?'\n                    }\n                }\n            }}\n            />\n    </div>\n  );\n}\n \nexport default AdminTable;","import React, {useState, useEffect} from 'react';\nimport RightMenuStats from '../../Components/menu/RightMenuStats'\nimport AdminTable from '../../Components/table/Admin'\nimport {\n    getAdmins,\n    addAdmin,\n    editAdmin,\n    deleteAdmin\n} from '../../api/client'\nimport { Redirect } from \"react-router-dom\"\nimport {\n    CircularProgress\n} from '@mui/material'\nimport { \n    Grid,\n} from \"@material-ui/core\";\n\n\nconst columns = [\n    {title: \"id\", field: \"id\", hidden: true},\n    {title: \"Прізвище\", field: \"last_name\"},\n    {title: \"Ім'я\", field: \"first_name\"},\n    {title: \"Логін\", field: \"username\"},\n    {title: \"passowrd\", field: 'password', hidden: true},\n    {title: \"Пароль\", field: 'pass_star'}\n]\n\nconst Admin = (props) => {\n    let data = (props.location && props.location.state) || {};\n    const [open, setOpen] = useState(false)\n    const [useCount] = useState(0)\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [admins, setAdmins] = useState([])\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        const request = {\n            token: data.token\n        }\n        getAdmins(request)\n            .then(res => res.json())\n            .then(res => {\n                setAdmins(res)\n                setIsAuthorized(true)\n                setLoading(false)\n            }).catch(err => {\n                setIsAuthorized(false);\n                setLoading(false); \n                return err;\n            })\n        \n    }, [useCount])\n\n    const handleRowDelete = async (oldData) => {\n        const request = {\n            token: data.token,\n            admin_id: oldData.id\n        }\n        deleteAdmin(request)\n          .then(res => {\n            let newAdmins = admins.filter(admin => admin.id !== oldData.id )\n            setAdmins(newAdmins)\n            setErrorMessages([])\n            setIserror()\n          })\n          .catch(err => {\n            setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n            setIserror(true)\n          })\n    }\n\n    const handleRowAdd = async (newData) => {\n        newData.password = newData.pass_star\n        //validation\n        let errorList = validate(newData)\n        if (errorList.length > 0) {\n          setErrorMessages(errorList)\n          setIserror(true)\n          throw Error\n        } else { //no error\n            const request = {\n                token: data.token,\n                admin: {\n                    first_name: newData.first_name,\n                    last_name: newData.last_name,\n                    username: newData.username,\n                    password: newData.password\n                }\n            }\n          addAdmin(request)\n            .then(res => res.json())\n            .then(res => {\n                newData.id = res[0].insertId\n                let dataToAdd = [...admins];\n                dataToAdd.push(newData);\n                setAdmins(dataToAdd);\n                setErrorMessages([])\n                setIserror(false)\n            })\n          .catch(() => {\n            setErrorMessages([\"Помилка на сервері буль ласка зачекайте\"])\n            setIserror(true)\n          })\n        }\n    }\n\n    const handleRowUpdate = async (newData, oldData) => {\n        //validation\n        let errorList = validate(newData)\n      \n        if (errorList.length > 0) {\n          setErrorMessages(errorList)\n          setIserror(true)\n          throw Error\n        } else { //no error\n            const password = newData.pass_star === '' ? '*****' : newData.pass_star\n            const request = {\n                token: data.token,\n                admin: {\n                    admin_id: newData.id,\n                    first_name: newData.first_name,\n                    last_name: newData.last_name,\n                    username: newData.username,\n                    password: password\n                }\n            }\n\n            editAdmin(request)\n                .then(() => {\n                    let updatedAdmins = [...admins];\n                    const index = updatedAdmins.findIndex(obj => obj.id === oldData.id)\n                    newData.pass_star = '*****'\n                    updatedAdmins[index] = newData\n                    setAdmins(updatedAdmins)\n                    setIserror(false)\n                    setErrorMessages([])\n                })\n                .catch(err => {\n                    setErrorMessages([\"Update failed! Server error\"])\n                    setIserror(true)\n                })\n        } \n    }\n\n    const validate = (data) => {\n        let errorList = []\n        if(data.first_name === undefined || data.first_name === ''){\n          errorList.push(\"Будь ласка ведіть ім'я\")\n        }\n        if(data.last_name === undefined || data.last_name === ''){\n          errorList.push(\"Будь ласка ведіть прізвище\")\n        }\n        if(data.username === undefined || data.username === ''){\n          errorList.push(\"Будь ласка ведіть логін\")\n        }\n        if(data.password === undefined || data.password === ''){\n          errorList.push(\"Будь ласка ведіть пароль\")\n        }\n        return errorList\n    }\n\n    if (isLoading) {\n        return (\n            <Grid\n                container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ minHeight: \"100vh\" }}\n            >\n              <CircularProgress />\n            </Grid>\n        )\n      }\n    if (!isAuthorized) {\n        return <Redirect to=\"/signin\"></Redirect>\n    } else { \n        return (\n            <div>\n                <RightMenuStats\n                    open={open}\n                    handleDrawerOpen={handleDrawerOpen}\n                    handleDrawerClose={handleDrawerClose}\n                    parents={data}\n                />\n                <AdminTable \n                    columns={columns} \n                    data={admins} \n                    handleRowDelete={handleRowDelete} \n                    handleRowAdd={handleRowAdd}\n                    handleRowUpdate={handleRowUpdate}\n                    iserror={iserror} \n                    errorMessages={errorMessages}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Admin","import {\n  BrowserRouter as Router,\n  Route \n} from 'react-router-dom';\nimport Start from '../pages/Start/Start'\nimport SignIn from '../pages/SingIn/SignIn'\nimport SignUp from '../pages/SingUp/SignUp'\nimport Ankety from '../pages/Anketa/Ankety'\nimport Anketa from '../pages/Anketa/Anketa'\nimport AddAnketa from '../pages/Anketa/AddAnketa'\nimport EditAnketa from '../pages/Anketa/EditAnketa'\nimport Statistics from '../pages/Statistics/Statistics'\nimport Children from '../pages/Children/Children'\nimport Profile from '../pages/Profile/Profile'\nimport Admin from '../pages/Admin/Admin'\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Start}></Route>\n      <Route exact path=\"/signin\" component={SignIn}></Route>\n      <Route exact path=\"/signup\" component={SignUp}></Route>\n      <Route exact path=\"/ankety\" component={Ankety}></Route>\n      <Route exact path=\"/anketa\" component={Anketa}></Route>\n      <Route exact path=\"/anketa/add\" component={AddAnketa}></Route>\n      <Route exact path=\"/anketa/edit/:anketa_id\" component={EditAnketa}></Route>\n      <Route exact path=\"/statistics\" component={Statistics}></Route>\n      <Route exact path=\"/children\" component={Children}></Route>\n      <Route exact path=\"/profile\" component={Profile}></Route>\n      <Route exact path=\"/dashboard/admin\" component={Admin}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/routes/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}